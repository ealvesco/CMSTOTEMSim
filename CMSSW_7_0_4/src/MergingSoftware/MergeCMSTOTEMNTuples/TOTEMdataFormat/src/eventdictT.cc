//
// File generated by rootcint at Mon Jul 11 22:56:22 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIeventdictT
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "eventdictT.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void T2Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_T2Event(void *p = 0);
   static void *newArray_T2Event(Long_t size, void *p);
   static void delete_T2Event(void *p);
   static void deleteArray_T2Event(void *p);
   static void destruct_T2Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::T2Event*)
   {
      ::T2Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::T2Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("T2Event", ::T2Event::Class_Version(), "./../src/T2Event.h", 8,
                  typeid(::T2Event), DefineBehavior(ptr, ptr),
                  &::T2Event::Dictionary, isa_proxy, 4,
                  sizeof(::T2Event) );
      instance.SetNew(&new_T2Event);
      instance.SetNewArray(&newArray_T2Event);
      instance.SetDelete(&delete_T2Event);
      instance.SetDeleteArray(&deleteArray_T2Event);
      instance.SetDestructor(&destruct_T2Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::T2Event*)
   {
      return GenerateInitInstanceLocal((::T2Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::T2Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void T1Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_T1Event(void *p = 0);
   static void *newArray_T1Event(Long_t size, void *p);
   static void delete_T1Event(void *p);
   static void deleteArray_T1Event(void *p);
   static void destruct_T1Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::T1Event*)
   {
      ::T1Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::T1Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("T1Event", ::T1Event::Class_Version(), "./../src/T1Event.h", 7,
                  typeid(::T1Event), DefineBehavior(ptr, ptr),
                  &::T1Event::Dictionary, isa_proxy, 4,
                  sizeof(::T1Event) );
      instance.SetNew(&new_T1Event);
      instance.SetNewArray(&newArray_T1Event);
      instance.SetDelete(&delete_T1Event);
      instance.SetDeleteArray(&deleteArray_T1Event);
      instance.SetDestructor(&destruct_T1Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::T1Event*)
   {
      return GenerateInitInstanceLocal((::T1Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::T1Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TriggerData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TriggerData(void *p = 0);
   static void *newArray_TriggerData(Long_t size, void *p);
   static void delete_TriggerData(void *p);
   static void deleteArray_TriggerData(void *p);
   static void destruct_TriggerData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TriggerData*)
   {
      ::TriggerData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TriggerData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TriggerData", ::TriggerData::Class_Version(), "./../src/TriggerData.h", 6,
                  typeid(::TriggerData), DefineBehavior(ptr, ptr),
                  &::TriggerData::Dictionary, isa_proxy, 4,
                  sizeof(::TriggerData) );
      instance.SetNew(&new_TriggerData);
      instance.SetNewArray(&newArray_TriggerData);
      instance.SetDelete(&delete_TriggerData);
      instance.SetDeleteArray(&deleteArray_TriggerData);
      instance.SetDestructor(&destruct_TriggerData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TriggerData*)
   {
      return GenerateInitInstanceLocal((::TriggerData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TriggerData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EventMetaData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventMetaData(void *p = 0);
   static void *newArray_EventMetaData(Long_t size, void *p);
   static void delete_EventMetaData(void *p);
   static void deleteArray_EventMetaData(void *p);
   static void destruct_EventMetaData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventMetaData*)
   {
      ::EventMetaData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventMetaData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventMetaData", ::EventMetaData::Class_Version(), "./../src/EventMetaData.h", 7,
                  typeid(::EventMetaData), DefineBehavior(ptr, ptr),
                  &::EventMetaData::Dictionary, isa_proxy, 4,
                  sizeof(::EventMetaData) );
      instance.SetNew(&new_EventMetaData);
      instance.SetNewArray(&newArray_EventMetaData);
      instance.SetDelete(&delete_EventMetaData);
      instance.SetDeleteArray(&deleteArray_EventMetaData);
      instance.SetDestructor(&destruct_EventMetaData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventMetaData*)
   {
      return GenerateInitInstanceLocal((::EventMetaData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventMetaData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpDigiInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpDigiInfo(void *p = 0);
   static void *newArray_RPRootDumpDigiInfo(Long_t size, void *p);
   static void delete_RPRootDumpDigiInfo(void *p);
   static void deleteArray_RPRootDumpDigiInfo(void *p);
   static void destruct_RPRootDumpDigiInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpDigiInfo*)
   {
      ::RPRootDumpDigiInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpDigiInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpDigiInfo", ::RPRootDumpDigiInfo::Class_Version(), "./../src/RPRootDumpDigiInfo.h", 12,
                  typeid(::RPRootDumpDigiInfo), DefineBehavior(ptr, ptr),
                  &::RPRootDumpDigiInfo::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpDigiInfo) );
      instance.SetNew(&new_RPRootDumpDigiInfo);
      instance.SetNewArray(&newArray_RPRootDumpDigiInfo);
      instance.SetDelete(&delete_RPRootDumpDigiInfo);
      instance.SetDeleteArray(&deleteArray_RPRootDumpDigiInfo);
      instance.SetDestructor(&destruct_RPRootDumpDigiInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpDigiInfo*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpDigiInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpDigiInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpReconstructedProton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpReconstructedProton(void *p = 0);
   static void *newArray_RPRootDumpReconstructedProton(Long_t size, void *p);
   static void delete_RPRootDumpReconstructedProton(void *p);
   static void deleteArray_RPRootDumpReconstructedProton(void *p);
   static void destruct_RPRootDumpReconstructedProton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpReconstructedProton*)
   {
      ::RPRootDumpReconstructedProton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpReconstructedProton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpReconstructedProton", ::RPRootDumpReconstructedProton::Class_Version(), "./../src/RPRootDumpReconstructedProton.h", 10,
                  typeid(::RPRootDumpReconstructedProton), DefineBehavior(ptr, ptr),
                  &::RPRootDumpReconstructedProton::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpReconstructedProton) );
      instance.SetNew(&new_RPRootDumpReconstructedProton);
      instance.SetNewArray(&newArray_RPRootDumpReconstructedProton);
      instance.SetDelete(&delete_RPRootDumpReconstructedProton);
      instance.SetDeleteArray(&deleteArray_RPRootDumpReconstructedProton);
      instance.SetDestructor(&destruct_RPRootDumpReconstructedProton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpReconstructedProton*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpReconstructedProton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpReconstructedProtonPair_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpReconstructedProtonPair(void *p = 0);
   static void *newArray_RPRootDumpReconstructedProtonPair(Long_t size, void *p);
   static void delete_RPRootDumpReconstructedProtonPair(void *p);
   static void deleteArray_RPRootDumpReconstructedProtonPair(void *p);
   static void destruct_RPRootDumpReconstructedProtonPair(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpReconstructedProtonPair*)
   {
      ::RPRootDumpReconstructedProtonPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpReconstructedProtonPair >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpReconstructedProtonPair", ::RPRootDumpReconstructedProtonPair::Class_Version(), "./../src/RPRootDumpReconstructedProtonPair.h", 10,
                  typeid(::RPRootDumpReconstructedProtonPair), DefineBehavior(ptr, ptr),
                  &::RPRootDumpReconstructedProtonPair::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpReconstructedProtonPair) );
      instance.SetNew(&new_RPRootDumpReconstructedProtonPair);
      instance.SetNewArray(&newArray_RPRootDumpReconstructedProtonPair);
      instance.SetDelete(&delete_RPRootDumpReconstructedProtonPair);
      instance.SetDeleteArray(&deleteArray_RPRootDumpReconstructedProtonPair);
      instance.SetDestructor(&destruct_RPRootDumpReconstructedProtonPair);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpReconstructedProtonPair*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpReconstructedProtonPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProtonPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPEvent(void *p = 0);
   static void *newArray_RPEvent(Long_t size, void *p);
   static void delete_RPEvent(void *p);
   static void deleteArray_RPEvent(void *p);
   static void destruct_RPEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPEvent*)
   {
      ::RPEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPEvent", ::RPEvent::Class_Version(), "./../src/RPEvent.h", 17,
                  typeid(::RPEvent), DefineBehavior(ptr, ptr),
                  &::RPEvent::Dictionary, isa_proxy, 4,
                  sizeof(::RPEvent) );
      instance.SetNew(&new_RPEvent);
      instance.SetNewArray(&newArray_RPEvent);
      instance.SetDelete(&delete_RPEvent);
      instance.SetDeleteArray(&deleteArray_RPEvent);
      instance.SetDestructor(&destruct_RPEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPEvent*)
   {
      return GenerateInitInstanceLocal((::RPEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpPattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpPattern(void *p = 0);
   static void *newArray_RPRootDumpPattern(Long_t size, void *p);
   static void delete_RPRootDumpPattern(void *p);
   static void deleteArray_RPRootDumpPattern(void *p);
   static void destruct_RPRootDumpPattern(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpPattern*)
   {
      ::RPRootDumpPattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpPattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpPattern", ::RPRootDumpPattern::Class_Version(), "./../src/RPRootDumpPattern.h", 11,
                  typeid(::RPRootDumpPattern), DefineBehavior(ptr, ptr),
                  &::RPRootDumpPattern::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpPattern) );
      instance.SetNew(&new_RPRootDumpPattern);
      instance.SetNewArray(&newArray_RPRootDumpPattern);
      instance.SetDelete(&delete_RPRootDumpPattern);
      instance.SetDeleteArray(&deleteArray_RPRootDumpPattern);
      instance.SetDestructor(&destruct_RPRootDumpPattern);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpPattern*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpPattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpPattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpPatternInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpPatternInfo(void *p = 0);
   static void *newArray_RPRootDumpPatternInfo(Long_t size, void *p);
   static void delete_RPRootDumpPatternInfo(void *p);
   static void deleteArray_RPRootDumpPatternInfo(void *p);
   static void destruct_RPRootDumpPatternInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpPatternInfo*)
   {
      ::RPRootDumpPatternInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpPatternInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpPatternInfo", ::RPRootDumpPatternInfo::Class_Version(), "./../src/RPRootDumpPatternInfo.h", 13,
                  typeid(::RPRootDumpPatternInfo), DefineBehavior(ptr, ptr),
                  &::RPRootDumpPatternInfo::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpPatternInfo) );
      instance.SetNew(&new_RPRootDumpPatternInfo);
      instance.SetNewArray(&newArray_RPRootDumpPatternInfo);
      instance.SetDelete(&delete_RPRootDumpPatternInfo);
      instance.SetDeleteArray(&deleteArray_RPRootDumpPatternInfo);
      instance.SetDestructor(&destruct_RPRootDumpPatternInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpPatternInfo*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpPatternInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpPatternInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpTrackInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpTrackInfo(void *p = 0);
   static void *newArray_RPRootDumpTrackInfo(Long_t size, void *p);
   static void delete_RPRootDumpTrackInfo(void *p);
   static void deleteArray_RPRootDumpTrackInfo(void *p);
   static void destruct_RPRootDumpTrackInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpTrackInfo*)
   {
      ::RPRootDumpTrackInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpTrackInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpTrackInfo", ::RPRootDumpTrackInfo::Class_Version(), "./../src/RPRootDumpTrackInfo.h", 16,
                  typeid(::RPRootDumpTrackInfo), DefineBehavior(ptr, ptr),
                  &::RPRootDumpTrackInfo::Dictionary, isa_proxy, 4,
                  sizeof(::RPRootDumpTrackInfo) );
      instance.SetNew(&new_RPRootDumpTrackInfo);
      instance.SetNewArray(&newArray_RPRootDumpTrackInfo);
      instance.SetDelete(&delete_RPRootDumpTrackInfo);
      instance.SetDeleteArray(&deleteArray_RPRootDumpTrackInfo);
      instance.SetDestructor(&destruct_RPRootDumpTrackInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpTrackInfo*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpTrackInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpTrackInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NtupleInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NtupleInfo(void *p = 0);
   static void *newArray_NtupleInfo(Long_t size, void *p);
   static void delete_NtupleInfo(void *p);
   static void deleteArray_NtupleInfo(void *p);
   static void destruct_NtupleInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::NtupleInfo*)
   {
      ::NtupleInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NtupleInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NtupleInfo", ::NtupleInfo::Class_Version(), "./../src/NtupleInfo.h", 8,
                  typeid(::NtupleInfo), DefineBehavior(ptr, ptr),
                  &::NtupleInfo::Dictionary, isa_proxy, 4,
                  sizeof(::NtupleInfo) );
      instance.SetNew(&new_NtupleInfo);
      instance.SetNewArray(&newArray_NtupleInfo);
      instance.SetDelete(&delete_NtupleInfo);
      instance.SetDeleteArray(&deleteArray_NtupleInfo);
      instance.SetDestructor(&destruct_NtupleInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::NtupleInfo*)
   {
      return GenerateInitInstanceLocal((::NtupleInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NtupleInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *T2Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *T2Event::Class_Name()
{
   return "T2Event";
}

//______________________________________________________________________________
const char *T2Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int T2Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void T2Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *T2Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *T1Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *T1Event::Class_Name()
{
   return "T1Event";
}

//______________________________________________________________________________
const char *T1Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int T1Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void T1Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *T1Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TriggerData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerData::Class_Name()
{
   return "TriggerData";
}

//______________________________________________________________________________
const char *TriggerData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *EventMetaData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventMetaData::Class_Name()
{
   return "EventMetaData";
}

//______________________________________________________________________________
const char *EventMetaData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventMetaData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventMetaData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventMetaData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpDigiInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpDigiInfo::Class_Name()
{
   return "RPRootDumpDigiInfo";
}

//______________________________________________________________________________
const char *RPRootDumpDigiInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpDigiInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpDigiInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpDigiInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpDigiInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpDigiInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpDigiInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpDigiInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpReconstructedProton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpReconstructedProton::Class_Name()
{
   return "RPRootDumpReconstructedProton";
}

//______________________________________________________________________________
const char *RPRootDumpReconstructedProton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpReconstructedProton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpReconstructedProton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpReconstructedProton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpReconstructedProtonPair::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpReconstructedProtonPair::Class_Name()
{
   return "RPRootDumpReconstructedProtonPair";
}

//______________________________________________________________________________
const char *RPRootDumpReconstructedProtonPair::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProtonPair*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpReconstructedProtonPair::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProtonPair*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpReconstructedProtonPair::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProtonPair*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpReconstructedProtonPair::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpReconstructedProtonPair*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPEvent::Class_Name()
{
   return "RPEvent";
}

//______________________________________________________________________________
const char *RPEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpPattern::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpPattern::Class_Name()
{
   return "RPRootDumpPattern";
}

//______________________________________________________________________________
const char *RPRootDumpPattern::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpPattern::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpPattern::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpPattern::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPattern*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpPatternInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpPatternInfo::Class_Name()
{
   return "RPRootDumpPatternInfo";
}

//______________________________________________________________________________
const char *RPRootDumpPatternInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPatternInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpPatternInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPatternInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpPatternInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPatternInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpPatternInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpPatternInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpTrackInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpTrackInfo::Class_Name()
{
   return "RPRootDumpTrackInfo";
}

//______________________________________________________________________________
const char *RPRootDumpTrackInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpTrackInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpTrackInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpTrackInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpTrackInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpTrackInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpTrackInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpTrackInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *NtupleInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NtupleInfo::Class_Name()
{
   return "NtupleInfo";
}

//______________________________________________________________________________
const char *NtupleInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NtupleInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NtupleInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NtupleInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NtupleInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NtupleInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NtupleInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NtupleInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void T2Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class T2Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(T2Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(T2Event::Class(),this);
   }
}

//______________________________________________________________________________
void T2Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class T2Event.
      TClass *R__cl = ::T2Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_row", (void*)&Pad_row);
      R__insp.InspectMember("vector<int>", (void*)&Pad_row, "Pad_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_col", (void*)&Pad_col);
      R__insp.InspectMember("vector<int>", (void*)&Pad_col, "Pad_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_det", (void*)&Pad_det);
      R__insp.InspectMember("vector<int>", (void*)&Pad_det, "Pad_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_row", (void*)&Strip_row);
      R__insp.InspectMember("vector<int>", (void*)&Strip_row, "Strip_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_col", (void*)&Strip_col);
      R__insp.InspectMember("vector<int>", (void*)&Strip_col, "Strip_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_det", (void*)&Strip_det);
      R__insp.InspectMember("vector<int>", (void*)&Strip_det, "Strip_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_XY", (void*)&TrkEta_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_XY, "TrkEta_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZmin_XY", (void*)&TrkZmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkZmin_XY, "TrkZmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkRmin_XY", (void*)&TrkRmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkRmin_XY, "TrkRmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAx", (void*)&TrkAx);
      R__insp.InspectMember("vector<double>", (void*)&TrkAx, "TrkAx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAy", (void*)&TrkAy);
      R__insp.InspectMember("vector<double>", (void*)&TrkAy, "TrkAy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkX0", (void*)&TrkX0);
      R__insp.InspectMember("vector<double>", (void*)&TrkX0, "TrkX0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkY0", (void*)&TrkY0);
      R__insp.InspectMember("vector<double>", (void*)&TrkY0, "TrkY0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi", (void*)&TrkPhi);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi, "TrkPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2XProb", (void*)&TrkChi2XProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2XProb, "TrkChi2XProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2YProb", (void*)&TrkChi2YProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2YProb, "TrkChi2YProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkClass1HitCounter", (void*)&TrkClass1HitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkClass1HitCounter, "TrkClass1HitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkHitCounter", (void*)&TrkHitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkHitCounter, "TrkHitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkThetaR_RZFit", (void*)&TrkThetaR_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkThetaR_RZFit, "TrkThetaR_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_RZFit", (void*)&TrkEta_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_RZFit, "TrkEta_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi_RZFit", (void*)&TrkPhi_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi_RZFit, "TrkPhi_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZ0_RZFit", (void*)&TrkZ0_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkZ0_RZFit, "TrkZ0_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBX_RZFit", (void*)&TrkBX_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBX_RZFit, "TrkBX_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBY_RZFit", (void*)&TrkBY_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBY_RZFit, "TrkBY_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChiProb", (void*)&TrkChiProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChiProb, "TrkChiProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumpadonly", (void*)&Trknumpadonly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumpadonly, "Trknumpadonly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumstriponly", (void*)&Trknumstriponly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumstriponly, "Trknumstriponly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitall", (void*)&Trknumhitall);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitall, "Trknumhitall.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitacl1", (void*)&Trknumhitacl1);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitacl1, "Trknumhitacl1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPhi", (void*)&HitPhi);
      R__insp.InspectMember("vector<double>", (void*)&HitPhi, "HitPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitR", (void*)&HitR);
      R__insp.InspectMember("vector<double>", (void*)&HitR, "HitR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitType", (void*)&HitType);
      R__insp.InspectMember("vector<double>", (void*)&HitType, "HitType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumPad", (void*)&HitNumPad);
      R__insp.InspectMember("vector<double>", (void*)&HitNumPad, "HitNumPad.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumStrip", (void*)&HitNumStrip);
      R__insp.InspectMember("vector<double>", (void*)&HitNumStrip, "HitNumStrip.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryX", (void*)&TrkEntryX);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryX, "TrkEntryX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryY", (void*)&TrkEntryY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryY, "TrkEntryY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryZ", (void*)&TrkEntryZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryZ, "TrkEntryZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitX", (void*)&TrkExitX);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitX, "TrkExitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitY", (void*)&TrkExitY);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitY, "TrkExitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitZ", (void*)&TrkExitZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitZ, "TrkExitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_no", &ev_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_noise", (void*)&Pad_noise);
      R__insp.InspectMember("vector<double>", (void*)&Pad_noise, "Pad_noise.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var1", &its_var1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var2", &its_var2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_T2Event(void *p) {
      return  p ? new(p) ::T2Event : new ::T2Event;
   }
   static void *newArray_T2Event(Long_t nElements, void *p) {
      return p ? new(p) ::T2Event[nElements] : new ::T2Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_T2Event(void *p) {
      delete ((::T2Event*)p);
   }
   static void deleteArray_T2Event(void *p) {
      delete [] ((::T2Event*)p);
   }
   static void destruct_T2Event(void *p) {
      typedef ::T2Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::T2Event

//______________________________________________________________________________
void T1Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class T1Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(T1Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(T1Event::Class(),this);
   }
}

//______________________________________________________________________________
void T1Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class T1Event.
      TClass *R__cl = ::T1Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA", (void*)&DigiStripA);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA, "DigiStripA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB", (void*)&DigiStripB);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB, "DigiStripB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire", (void*)&DigiWire);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire, "DigiWire.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_Arm", (void*)&DigiStripA_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_Arm, "DigiStripA_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_Plane", (void*)&DigiStripA_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_Plane, "DigiStripA_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_CSC", (void*)&DigiStripA_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_CSC, "DigiStripA_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_Arm", (void*)&DigiStripB_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_Arm, "DigiStripB_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_Plane", (void*)&DigiStripB_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_Plane, "DigiStripB_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_CSC", (void*)&DigiStripB_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_CSC, "DigiStripB_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_Arm", (void*)&DigiWire_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_Arm, "DigiWire_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_Plane", (void*)&DigiWire_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_Plane, "DigiWire_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_CSC", (void*)&DigiWire_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_CSC, "DigiWire_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAx", (void*)&TrkAx);
      R__insp.InspectMember("vector<double>", (void*)&TrkAx, "TrkAx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAy", (void*)&TrkAy);
      R__insp.InspectMember("vector<double>", (void*)&TrkAy, "TrkAy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkX0", (void*)&TrkX0);
      R__insp.InspectMember("vector<double>", (void*)&TrkX0, "TrkX0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkY0", (void*)&TrkY0);
      R__insp.InspectMember("vector<double>", (void*)&TrkY0, "TrkY0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi", (void*)&TrkPhi);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi, "TrkPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta", (void*)&TrkEta);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta, "TrkEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZatRmin", (void*)&TrkZatRmin);
      R__insp.InspectMember("vector<double>", (void*)&TrkZatRmin, "TrkZatRmin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkRmin", (void*)&TrkRmin);
      R__insp.InspectMember("vector<double>", (void*)&TrkRmin, "TrkRmin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2OverN", (void*)&TrkChi2OverN);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2OverN, "TrkChi2OverN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitX", (void*)&RecoHitX);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitX, "RecoHitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitY", (void*)&RecoHitY);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitY, "RecoHitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitZ", (void*)&RecoHitZ);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitZ, "RecoHitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_no", &ev_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var1", &its_var1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var2", &its_var2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_T1Event(void *p) {
      return  p ? new(p) ::T1Event : new ::T1Event;
   }
   static void *newArray_T1Event(Long_t nElements, void *p) {
      return p ? new(p) ::T1Event[nElements] : new ::T1Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_T1Event(void *p) {
      delete ((::T1Event*)p);
   }
   static void deleteArray_T1Event(void *p) {
      delete [] ((::T1Event*)p);
   }
   static void destruct_T1Event(void *p) {
      typedef ::T1Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::T1Event

//______________________________________________________________________________
void TriggerData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TriggerData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TriggerData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TriggerData::Class(),this);
   }
}

//______________________________________________________________________________
void TriggerData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TriggerData.
      TClass *R__cl = ::TriggerData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_num", &event_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bunch_num", &bunch_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "src_id", &src_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orbit_num", &orbit_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "revision_num", &revision_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_num", &run_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_num", &trigger_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inhibited_triggers_num", &inhibited_triggers_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "input_status_bits", &input_status_bits);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TriggerData(void *p) {
      return  p ? new(p) ::TriggerData : new ::TriggerData;
   }
   static void *newArray_TriggerData(Long_t nElements, void *p) {
      return p ? new(p) ::TriggerData[nElements] : new ::TriggerData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TriggerData(void *p) {
      delete ((::TriggerData*)p);
   }
   static void deleteArray_TriggerData(void *p) {
      delete [] ((::TriggerData*)p);
   }
   static void destruct_TriggerData(void *p) {
      typedef ::TriggerData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TriggerData

//______________________________________________________________________________
void EventMetaData::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventMetaData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventMetaData::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventMetaData::Class(),this);
   }
}

//______________________________________________________________________________
void EventMetaData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventMetaData.
      TClass *R__cl = ::EventMetaData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_no", &event_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_event_number", &daq_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_Id", (void*)&optoRx_Id);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_Id, "optoRx_Id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_BX", (void*)&optoRx_BX);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_BX, "optoRx_BX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_LV1", (void*)&optoRx_LV1);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_LV1, "optoRx_LV1.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventMetaData(void *p) {
      return  p ? new(p) ::EventMetaData : new ::EventMetaData;
   }
   static void *newArray_EventMetaData(Long_t nElements, void *p) {
      return p ? new(p) ::EventMetaData[nElements] : new ::EventMetaData[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventMetaData(void *p) {
      delete ((::EventMetaData*)p);
   }
   static void deleteArray_EventMetaData(void *p) {
      delete [] ((::EventMetaData*)p);
   }
   static void destruct_EventMetaData(void *p) {
      typedef ::EventMetaData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventMetaData

//______________________________________________________________________________
void RPRootDumpDigiInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpDigiInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpDigiInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpDigiInfo::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpDigiInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpDigiInfo.
      TClass *R__cl = ::RPRootDumpDigiInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfClusters", (void*)&numberOfClusters);
      R__insp.InspectMember("vector<int>", (void*)&numberOfClusters, "numberOfClusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfPlanesOn", &numberOfPlanesOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uPlanesOn", &uPlanesOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vPlanesOn", &vPlanesOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "planeId", (void*)&planeId);
      R__insp.InspectMember("vector<int>", (void*)&planeId, "planeId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSize", (void*)&clusterSize);
      R__insp.InspectMember("vector<int>", (void*)&clusterSize, "clusterSize.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centralStrip", (void*)&centralStrip);
      R__insp.InspectMember("vector<int>", (void*)&centralStrip, "centralStrip.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpDigiInfo(void *p) {
      return  p ? new(p) ::RPRootDumpDigiInfo : new ::RPRootDumpDigiInfo;
   }
   static void *newArray_RPRootDumpDigiInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpDigiInfo[nElements] : new ::RPRootDumpDigiInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpDigiInfo(void *p) {
      delete ((::RPRootDumpDigiInfo*)p);
   }
   static void deleteArray_RPRootDumpDigiInfo(void *p) {
      delete [] ((::RPRootDumpDigiInfo*)p);
   }
   static void destruct_RPRootDumpDigiInfo(void *p) {
      typedef ::RPRootDumpDigiInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpDigiInfo

//______________________________________________________________________________
void RPEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPEvent::Class(),this);
   }
}

//______________________________________________________________________________
void RPEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPEvent.
      TClass *R__cl = ::RPEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rec_prot_left", &rec_prot_left);
      R__insp.InspectMember(rec_prot_left, "rec_prot_left.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rec_prot_right", &rec_prot_right);
      R__insp.InspectMember(rec_prot_right, "rec_prot_right.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rec_prot_pair", &rec_prot_pair);
      R__insp.InspectMember(rec_prot_pair, "rec_prot_pair.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPEvent(void *p) {
      return  p ? new(p) ::RPEvent : new ::RPEvent;
   }
   static void *newArray_RPEvent(Long_t nElements, void *p) {
      return p ? new(p) ::RPEvent[nElements] : new ::RPEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPEvent(void *p) {
      delete ((::RPEvent*)p);
   }
   static void deleteArray_RPEvent(void *p) {
      delete [] ((::RPEvent*)p);
   }
   static void destruct_RPEvent(void *p) {
      typedef ::RPEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPEvent

//______________________________________________________________________________
void RPRootDumpPattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpPattern.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpPattern::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpPattern::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpPattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpPattern.
      TClass *R__cl = ::RPRootDumpPattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "w", &w);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpPattern(void *p) {
      return  p ? new(p) ::RPRootDumpPattern : new ::RPRootDumpPattern;
   }
   static void *newArray_RPRootDumpPattern(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpPattern[nElements] : new ::RPRootDumpPattern[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpPattern(void *p) {
      delete ((::RPRootDumpPattern*)p);
   }
   static void deleteArray_RPRootDumpPattern(void *p) {
      delete [] ((::RPRootDumpPattern*)p);
   }
   static void destruct_RPRootDumpPattern(void *p) {
      typedef ::RPRootDumpPattern current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpPattern

//______________________________________________________________________________
void RPRootDumpPatternInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpPatternInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpPatternInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpPatternInfo::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpPatternInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpPatternInfo.
      TClass *R__cl = ::RPRootDumpPatternInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u", (void*)&u);
      R__insp.InspectMember("vector<RPRootDumpPattern>", (void*)&u, "u.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v", (void*)&v);
      R__insp.InspectMember("vector<RPRootDumpPattern>", (void*)&v, "v.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittable", &fittable);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpPatternInfo(void *p) {
      return  p ? new(p) ::RPRootDumpPatternInfo : new ::RPRootDumpPatternInfo;
   }
   static void *newArray_RPRootDumpPatternInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpPatternInfo[nElements] : new ::RPRootDumpPatternInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpPatternInfo(void *p) {
      delete ((::RPRootDumpPatternInfo*)p);
   }
   static void deleteArray_RPRootDumpPatternInfo(void *p) {
      delete [] ((::RPRootDumpPatternInfo*)p);
   }
   static void destruct_RPRootDumpPatternInfo(void *p) {
      typedef ::RPRootDumpPatternInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpPatternInfo

//______________________________________________________________________________
void RPRootDumpReconstructedProton::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpReconstructedProton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpReconstructedProton::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpReconstructedProton::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpReconstructedProton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpReconstructedProton.
      TClass *R__cl = ::RPRootDumpReconstructedProton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valid", &valid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thx", &thx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thy", &thy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tx", &tx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ty", &ty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xi", &xi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y0", &y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chindf", &chindf);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpReconstructedProton(void *p) {
      return  p ? new(p) ::RPRootDumpReconstructedProton : new ::RPRootDumpReconstructedProton;
   }
   static void *newArray_RPRootDumpReconstructedProton(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpReconstructedProton[nElements] : new ::RPRootDumpReconstructedProton[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpReconstructedProton(void *p) {
      delete ((::RPRootDumpReconstructedProton*)p);
   }
   static void deleteArray_RPRootDumpReconstructedProton(void *p) {
      delete [] ((::RPRootDumpReconstructedProton*)p);
   }
   static void destruct_RPRootDumpReconstructedProton(void *p) {
      typedef ::RPRootDumpReconstructedProton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpReconstructedProton

//______________________________________________________________________________
void RPRootDumpReconstructedProtonPair::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpReconstructedProtonPair.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpReconstructedProtonPair::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpReconstructedProtonPair::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpReconstructedProtonPair::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpReconstructedProtonPair.
      TClass *R__cl = ::RPRootDumpReconstructedProtonPair::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valid", &valid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thxr", &thxr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thyr", &thyr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xir", &xir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phir", &phir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thxl", &thxl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thyl", &thyl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xil", &xil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phil", &phil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y0", &y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0", &z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chindf", &chindf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tr", &tr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "txr", &txr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tyr", &tyr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tl", &tl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "txl", &txl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tyl", &tyl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpReconstructedProtonPair(void *p) {
      return  p ? new(p) ::RPRootDumpReconstructedProtonPair : new ::RPRootDumpReconstructedProtonPair;
   }
   static void *newArray_RPRootDumpReconstructedProtonPair(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpReconstructedProtonPair[nElements] : new ::RPRootDumpReconstructedProtonPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpReconstructedProtonPair(void *p) {
      delete ((::RPRootDumpReconstructedProtonPair*)p);
   }
   static void deleteArray_RPRootDumpReconstructedProtonPair(void *p) {
      delete [] ((::RPRootDumpReconstructedProtonPair*)p);
   }
   static void destruct_RPRootDumpReconstructedProtonPair(void *p) {
      typedef ::RPRootDumpReconstructedProtonPair current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpReconstructedProtonPair

//______________________________________________________________________________
void RPRootDumpTrackInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpTrackInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPRootDumpTrackInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPRootDumpTrackInfo::Class(),this);
   }
}

//______________________________________________________________________________
void RPRootDumpTrackInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpTrackInfo.
      TClass *R__cl = ::RPRootDumpTrackInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valid", &valid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2ndf", &chi2ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "entries", &entries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_x", &res_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_y", &res_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u_sect", (void*)&u_sect);
      R__insp.InspectMember("vector<int>", (void*)&u_sect, "u_sect.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_sect", (void*)&v_sect);
      R__insp.InspectMember("vector<int>", (void*)&v_sect, "v_sect.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "u_sect_no", &u_sect_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_sect_no", &v_sect_no);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpTrackInfo(void *p) {
      return  p ? new(p) ::RPRootDumpTrackInfo : new ::RPRootDumpTrackInfo;
   }
   static void *newArray_RPRootDumpTrackInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RPRootDumpTrackInfo[nElements] : new ::RPRootDumpTrackInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpTrackInfo(void *p) {
      delete ((::RPRootDumpTrackInfo*)p);
   }
   static void deleteArray_RPRootDumpTrackInfo(void *p) {
      delete [] ((::RPRootDumpTrackInfo*)p);
   }
   static void destruct_RPRootDumpTrackInfo(void *p) {
      typedef ::RPRootDumpTrackInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPRootDumpTrackInfo

//______________________________________________________________________________
void NtupleInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class NtupleInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NtupleInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(NtupleInfo::Class(),this);
   }
}

//______________________________________________________________________________
void NtupleInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NtupleInfo.
      TClass *R__cl = ::NtupleInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minOrbit", &minOrbit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxOrbit", &maxOrbit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orbits", (void*)&orbits);
      R__insp.InspectMember("map<unsigned int,std::vector<int> >", (void*)&orbits, "orbits.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NtupleInfo(void *p) {
      return  p ? new(p) ::NtupleInfo : new ::NtupleInfo;
   }
   static void *newArray_NtupleInfo(Long_t nElements, void *p) {
      return p ? new(p) ::NtupleInfo[nElements] : new ::NtupleInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_NtupleInfo(void *p) {
      delete ((::NtupleInfo*)p);
   }
   static void deleteArray_NtupleInfo(void *p) {
      delete [] ((::NtupleInfo*)p);
   }
   static void destruct_NtupleInfo(void *p) {
      typedef ::NtupleInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::NtupleInfo

namespace ROOT {
   void maplEunsignedsPintcOvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOvectorlEintgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOvectorlEintgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOvectorlEintgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOvectorlEintgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,vector<int> >*)
   {
      map<unsigned int,vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,vector<int> >", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<unsigned int,vector<int> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,vector<int> >) );
      instance.SetNew(&new_maplEunsignedsPintcOvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOvectorlEintgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<int> > : new map<unsigned int,vector<int> >;
   }
   static void *newArray_maplEunsignedsPintcOvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<int> >[nElements] : new map<unsigned int,vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOvectorlEintgRsPgR(void *p) {
      delete ((map<unsigned int,vector<int> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOvectorlEintgRsPgR(void *p) {
      delete [] ((map<unsigned int,vector<int> >*)p);
   }
   static void destruct_maplEunsignedsPintcOvectorlEintgRsPgR(void *p) {
      typedef map<unsigned int,vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,vector<int> >

namespace ROOT {
   void vectorlERPRootDumpPatterngR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERPRootDumpPatterngR_Dictionary();
   static void *new_vectorlERPRootDumpPatterngR(void *p = 0);
   static void *newArray_vectorlERPRootDumpPatterngR(Long_t size, void *p);
   static void delete_vectorlERPRootDumpPatterngR(void *p);
   static void deleteArray_vectorlERPRootDumpPatterngR(void *p);
   static void destruct_vectorlERPRootDumpPatterngR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RPRootDumpPattern>*)
   {
      vector<RPRootDumpPattern> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RPRootDumpPattern>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RPRootDumpPattern>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RPRootDumpPattern>), DefineBehavior(ptr, ptr),
                  0, &vectorlERPRootDumpPatterngR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RPRootDumpPattern>) );
      instance.SetNew(&new_vectorlERPRootDumpPatterngR);
      instance.SetNewArray(&newArray_vectorlERPRootDumpPatterngR);
      instance.SetDelete(&delete_vectorlERPRootDumpPatterngR);
      instance.SetDeleteArray(&deleteArray_vectorlERPRootDumpPatterngR);
      instance.SetDestructor(&destruct_vectorlERPRootDumpPatterngR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RPRootDumpPattern> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RPRootDumpPattern>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERPRootDumpPatterngR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RPRootDumpPattern>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERPRootDumpPatterngR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpPattern> : new vector<RPRootDumpPattern>;
   }
   static void *newArray_vectorlERPRootDumpPatterngR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpPattern>[nElements] : new vector<RPRootDumpPattern>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERPRootDumpPatterngR(void *p) {
      delete ((vector<RPRootDumpPattern>*)p);
   }
   static void deleteArray_vectorlERPRootDumpPatterngR(void *p) {
      delete [] ((vector<RPRootDumpPattern>*)p);
   }
   static void destruct_vectorlERPRootDumpPatterngR(void *p) {
      typedef vector<RPRootDumpPattern> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RPRootDumpPattern>

namespace ROOT {
   void vectorlERPRootDumpTrackInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERPRootDumpTrackInfogR_Dictionary();
   static void *new_vectorlERPRootDumpTrackInfogR(void *p = 0);
   static void *newArray_vectorlERPRootDumpTrackInfogR(Long_t size, void *p);
   static void delete_vectorlERPRootDumpTrackInfogR(void *p);
   static void deleteArray_vectorlERPRootDumpTrackInfogR(void *p);
   static void destruct_vectorlERPRootDumpTrackInfogR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RPRootDumpTrackInfo>*)
   {
      vector<RPRootDumpTrackInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RPRootDumpTrackInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RPRootDumpTrackInfo>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RPRootDumpTrackInfo>), DefineBehavior(ptr, ptr),
                  0, &vectorlERPRootDumpTrackInfogR_Dictionary, isa_proxy, 4,
                  sizeof(vector<RPRootDumpTrackInfo>) );
      instance.SetNew(&new_vectorlERPRootDumpTrackInfogR);
      instance.SetNewArray(&newArray_vectorlERPRootDumpTrackInfogR);
      instance.SetDelete(&delete_vectorlERPRootDumpTrackInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlERPRootDumpTrackInfogR);
      instance.SetDestructor(&destruct_vectorlERPRootDumpTrackInfogR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RPRootDumpTrackInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RPRootDumpTrackInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERPRootDumpTrackInfogR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RPRootDumpTrackInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERPRootDumpTrackInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpTrackInfo> : new vector<RPRootDumpTrackInfo>;
   }
   static void *newArray_vectorlERPRootDumpTrackInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpTrackInfo>[nElements] : new vector<RPRootDumpTrackInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERPRootDumpTrackInfogR(void *p) {
      delete ((vector<RPRootDumpTrackInfo>*)p);
   }
   static void deleteArray_vectorlERPRootDumpTrackInfogR(void *p) {
      delete [] ((vector<RPRootDumpTrackInfo>*)p);
   }
   static void destruct_vectorlERPRootDumpTrackInfogR(void *p) {
      typedef vector<RPRootDumpTrackInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RPRootDumpTrackInfo>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* ../src/eventdictT.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableeventdictT();

extern "C" void G__set_cpp_environmenteventdictT() {
  G__cpp_reset_tagtableeventdictT();
}
#include <new>
extern "C" int G__cpp_dllreveventdictT() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* T2Event */
static int G__eventdictT_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2Event[n];
     } else {
       p = new((void*) gvp) T2Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2Event;
     } else {
       p = new((void*) gvp) T2Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_T2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) T2Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) T2Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      T2Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((T2Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   T2Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new T2Event(*(T2Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_T2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef T2Event G__TT2Event;
static int G__eventdictT_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (T2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((T2Event*) (soff+(sizeof(T2Event)*i)))->~G__TT2Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (T2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((T2Event*) (soff))->~G__TT2Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2Event* dest = (T2Event*) G__getstructoffset();
   *dest = *(T2Event*) libp->para[0].ref;
   const T2Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* T1Event */
static int G__eventdictT_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T1Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T1Event[n];
     } else {
       p = new((void*) gvp) T1Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T1Event;
     } else {
       p = new((void*) gvp) T1Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_T1Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) T1Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) T1Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      T1Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((T1Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T1Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T1Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   T1Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new T1Event(*(T1Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_T1Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef T1Event G__TT1Event;
static int G__eventdictT_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (T1Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((T1Event*) (soff+(sizeof(T1Event)*i)))->~G__TT1Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (T1Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((T1Event*) (soff))->~G__TT1Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T1Event* dest = (T1Event*) G__getstructoffset();
   *dest = *(T1Event*) libp->para[0].ref;
   const T1Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TriggerData */
static int G__eventdictT_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TriggerData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TriggerData[n];
     } else {
       p = new((void*) gvp) TriggerData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TriggerData;
     } else {
       p = new((void*) gvp) TriggerData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_TriggerData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TriggerData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TriggerData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TriggerData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TriggerData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TriggerData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TriggerData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TriggerData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TriggerData(*(TriggerData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_TriggerData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TriggerData G__TTriggerData;
static int G__eventdictT_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TriggerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TriggerData*) (soff+(sizeof(TriggerData)*i)))->~G__TTriggerData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TriggerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TriggerData*) (soff))->~G__TTriggerData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TriggerData* dest = (TriggerData*) G__getstructoffset();
   *dest = *(TriggerData*) libp->para[0].ref;
   const TriggerData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventMetaData */
static int G__eventdictT_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventMetaData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventMetaData[n];
     } else {
       p = new((void*) gvp) EventMetaData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventMetaData;
     } else {
       p = new((void*) gvp) EventMetaData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_EventMetaData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventMetaData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventMetaData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventMetaData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventMetaData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventMetaData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventMetaData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventMetaData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventMetaData(*(EventMetaData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_EventMetaData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventMetaData G__TEventMetaData;
static int G__eventdictT_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventMetaData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventMetaData*) (soff+(sizeof(EventMetaData)*i)))->~G__TEventMetaData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventMetaData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventMetaData*) (soff))->~G__TEventMetaData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventMetaData* dest = (EventMetaData*) G__getstructoffset();
   *dest = *(EventMetaData*) libp->para[0].ref;
   const EventMetaData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpDigiInfo */
static int G__eventdictT_176_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpDigiInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpDigiInfo[n];
     } else {
       p = new((void*) gvp) RPRootDumpDigiInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpDigiInfo;
     } else {
       p = new((void*) gvp) RPRootDumpDigiInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpDigiInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpDigiInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpDigiInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpDigiInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpDigiInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpDigiInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpDigiInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpDigiInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_176_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpDigiInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_176_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpDigiInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpDigiInfo(*(RPRootDumpDigiInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpDigiInfo G__TRPRootDumpDigiInfo;
static int G__eventdictT_176_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpDigiInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpDigiInfo*) (soff+(sizeof(RPRootDumpDigiInfo)*i)))->~G__TRPRootDumpDigiInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpDigiInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpDigiInfo*) (soff))->~G__TRPRootDumpDigiInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_176_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpDigiInfo* dest = (RPRootDumpDigiInfo*) G__getstructoffset();
   *dest = *(RPRootDumpDigiInfo*) libp->para[0].ref;
   const RPRootDumpDigiInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpReconstructedProton */
static int G__eventdictT_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpReconstructedProton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpReconstructedProton[n];
     } else {
       p = new((void*) gvp) RPRootDumpReconstructedProton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpReconstructedProton;
     } else {
       p = new((void*) gvp) RPRootDumpReconstructedProton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpReconstructedProton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpReconstructedProton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpReconstructedProton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpReconstructedProton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpReconstructedProton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpReconstructedProton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpReconstructedProton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpReconstructedProton(*(RPRootDumpReconstructedProton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpReconstructedProton G__TRPRootDumpReconstructedProton;
static int G__eventdictT_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpReconstructedProton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpReconstructedProton*) (soff+(sizeof(RPRootDumpReconstructedProton)*i)))->~G__TRPRootDumpReconstructedProton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpReconstructedProton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpReconstructedProton*) (soff))->~G__TRPRootDumpReconstructedProton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpReconstructedProton* dest = (RPRootDumpReconstructedProton*) G__getstructoffset();
   *dest = *(RPRootDumpReconstructedProton*) libp->para[0].ref;
   const RPRootDumpReconstructedProton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpReconstructedProtonPair */
static int G__eventdictT_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpReconstructedProtonPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpReconstructedProtonPair[n];
     } else {
       p = new((void*) gvp) RPRootDumpReconstructedProtonPair[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpReconstructedProtonPair;
     } else {
       p = new((void*) gvp) RPRootDumpReconstructedProtonPair;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpReconstructedProtonPair::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProtonPair::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpReconstructedProtonPair::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpReconstructedProtonPair::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpReconstructedProtonPair*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProtonPair::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpReconstructedProtonPair::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpReconstructedProtonPair::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpReconstructedProtonPair::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpReconstructedProtonPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpReconstructedProtonPair(*(RPRootDumpReconstructedProtonPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpReconstructedProtonPair G__TRPRootDumpReconstructedProtonPair;
static int G__eventdictT_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpReconstructedProtonPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpReconstructedProtonPair*) (soff+(sizeof(RPRootDumpReconstructedProtonPair)*i)))->~G__TRPRootDumpReconstructedProtonPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpReconstructedProtonPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpReconstructedProtonPair*) (soff))->~G__TRPRootDumpReconstructedProtonPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpReconstructedProtonPair* dest = (RPRootDumpReconstructedProtonPair*) G__getstructoffset();
   *dest = *(RPRootDumpReconstructedProtonPair*) libp->para[0].ref;
   const RPRootDumpReconstructedProtonPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPEvent */
static int G__eventdictT_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPEvent[n];
     } else {
       p = new((void*) gvp) RPEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPEvent;
     } else {
       p = new((void*) gvp) RPEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_179_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_179_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPEvent(*(RPEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPEvent G__TRPEvent;
static int G__eventdictT_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPEvent*) (soff+(sizeof(RPEvent)*i)))->~G__TRPEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPEvent*) (soff))->~G__TRPEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPEvent* dest = (RPEvent*) G__getstructoffset();
   *dest = *(RPEvent*) libp->para[0].ref;
   const RPEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpPattern */
static int G__eventdictT_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpPattern(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) RPRootDumpPattern(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpPattern((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) RPRootDumpPattern((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpPattern((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) RPRootDumpPattern((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new RPRootDumpPattern[n];
       } else {
         p = new((void*) gvp) RPRootDumpPattern[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new RPRootDumpPattern;
       } else {
         p = new((void*) gvp) RPRootDumpPattern;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpPattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpPattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpPattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpPattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpPattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpPattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpPattern* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpPattern(*(RPRootDumpPattern*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpPattern G__TRPRootDumpPattern;
static int G__eventdictT_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpPattern*) (soff+(sizeof(RPRootDumpPattern)*i)))->~G__TRPRootDumpPattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpPattern*) (soff))->~G__TRPRootDumpPattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpPattern* dest = (RPRootDumpPattern*) G__getstructoffset();
   *dest = *(RPRootDumpPattern*) libp->para[0].ref;
   const RPRootDumpPattern& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpPatternInfo */
static int G__eventdictT_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpPatternInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpPatternInfo((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RPRootDumpPatternInfo((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new RPRootDumpPatternInfo[n];
       } else {
         p = new((void*) gvp) RPRootDumpPatternInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new RPRootDumpPatternInfo;
       } else {
         p = new((void*) gvp) RPRootDumpPatternInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpPatternInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPatternInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpPatternInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpPatternInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpPatternInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPatternInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpPatternInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpPatternInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpPatternInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpPatternInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpPatternInfo(*(RPRootDumpPatternInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpPatternInfo G__TRPRootDumpPatternInfo;
static int G__eventdictT_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpPatternInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpPatternInfo*) (soff+(sizeof(RPRootDumpPatternInfo)*i)))->~G__TRPRootDumpPatternInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpPatternInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpPatternInfo*) (soff))->~G__TRPRootDumpPatternInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpPatternInfo* dest = (RPRootDumpPatternInfo*) G__getstructoffset();
   *dest = *(RPRootDumpPatternInfo*) libp->para[0].ref;
   const RPRootDumpPatternInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpTrackInfo */
static int G__eventdictT_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpTrackInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpTrackInfo[n];
     } else {
       p = new((void*) gvp) RPRootDumpTrackInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpTrackInfo;
     } else {
       p = new((void*) gvp) RPRootDumpTrackInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpTrackInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpTrackInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpTrackInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpTrackInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpTrackInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpTrackInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpTrackInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpTrackInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpTrackInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpTrackInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpTrackInfo(*(RPRootDumpTrackInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpTrackInfo G__TRPRootDumpTrackInfo;
static int G__eventdictT_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpTrackInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpTrackInfo*) (soff+(sizeof(RPRootDumpTrackInfo)*i)))->~G__TRPRootDumpTrackInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpTrackInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpTrackInfo*) (soff))->~G__TRPRootDumpTrackInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpTrackInfo* dest = (RPRootDumpTrackInfo*) G__getstructoffset();
   *dest = *(RPRootDumpTrackInfo*) libp->para[0].ref;
   const RPRootDumpTrackInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NtupleInfo */
static int G__eventdictT_422_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NtupleInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NtupleInfo[n];
     } else {
       p = new((void*) gvp) NtupleInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NtupleInfo;
     } else {
       p = new((void*) gvp) NtupleInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NtupleInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NtupleInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NtupleInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NtupleInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NtupleInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_422_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NtupleInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventdictT_422_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NtupleInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NtupleInfo(*(NtupleInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NtupleInfo G__TNtupleInfo;
static int G__eventdictT_422_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NtupleInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NtupleInfo*) (soff+(sizeof(NtupleInfo)*i)))->~G__TNtupleInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NtupleInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NtupleInfo*) (soff))->~G__TNtupleInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventdictT_422_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NtupleInfo* dest = (NtupleInfo*) G__getstructoffset();
   *dest = *(NtupleInfo*) libp->para[0].ref;
   const NtupleInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > */
static int G__eventdictT_433_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reference obj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->at((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_reference obj = ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->at((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator* pobj;
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator xobj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->begin();
         pobj = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator* pobj;
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator xobj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->end();
         pobj = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator* pobj;
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator xobj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator* pobj;
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator xobj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->rend();
         pobj = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->resize((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->resize((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]), *((RPRootDumpTrackInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reference obj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->operator[]((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_reference obj = ((const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->operator[]((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >[n];
     } else {
       p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >;
     } else {
       p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]), *(RPRootDumpTrackInfo*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]), *(RPRootDumpTrackInfo*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >(*(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >(*(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[0])), *((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[0])), *((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >& obj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->operator=(*(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->reserve((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPRootDumpTrackInfo& obj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPRootDumpTrackInfo& obj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->push_back(*(RPRootDumpTrackInfo*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->swap(*(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator* pobj;
         vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator xobj = ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->insert(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[0])), *(RPRootDumpTrackInfo*) libp->para[1].ref);
         pobj = new vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->insert(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[0])), *((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->insert(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[0])), (vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type) G__int(libp->para[1])
, *(RPRootDumpTrackInfo*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->erase(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->erase(*((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[0])), *((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventdictT_433_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > G__TvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR;
static int G__eventdictT_433_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) (soff+(sizeof(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >)*i)))->~G__TvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*) (soff))->~G__TvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* T2Event */

/* T1Event */

/* TriggerData */

/* EventMetaData */

/* RPRootDumpDigiInfo */

/* RPRootDumpReconstructedProton */

/* RPRootDumpReconstructedProtonPair */

/* RPEvent */

/* RPRootDumpPattern */

/* RPRootDumpPatternInfo */

/* RPRootDumpTrackInfo */

/* NtupleInfo */

/* vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunceventdictT {
 public:
  G__Sizep2memfunceventdictT(): p(&G__Sizep2memfunceventdictT::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunceventdictT::*p)();
};

size_t G__get_sizep2memfunceventdictT()
{
  G__Sizep2memfunceventdictT a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceeventdictT() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_T2Event))) {
     T2Event *G__Lderived;
     G__Lderived=(T2Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_T2Event),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_T1Event))) {
     T1Event *G__Lderived;
     G__Lderived=(T1Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_T1Event),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_TriggerData))) {
     TriggerData *G__Lderived;
     G__Lderived=(TriggerData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_TriggerData),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_EventMetaData))) {
     EventMetaData *G__Lderived;
     G__Lderived=(EventMetaData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_EventMetaData),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo))) {
     RPRootDumpDigiInfo *G__Lderived;
     G__Lderived=(RPRootDumpDigiInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton))) {
     RPRootDumpReconstructedProton *G__Lderived;
     G__Lderived=(RPRootDumpReconstructedProton*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair))) {
     RPRootDumpReconstructedProtonPair *G__Lderived;
     G__Lderived=(RPRootDumpReconstructedProtonPair*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPEvent))) {
     RPEvent *G__Lderived;
     G__Lderived=(RPEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPEvent),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern))) {
     RPRootDumpPattern *G__Lderived;
     G__Lderived=(RPRootDumpPattern*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo))) {
     RPRootDumpPatternInfo *G__Lderived;
     G__Lderived=(RPRootDumpPatternInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo))) {
     RPRootDumpTrackInfo *G__Lderived;
     G__Lderived=(RPRootDumpTrackInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo))) {
     NtupleInfo *G__Lderived;
     G__Lderived=(NtupleInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo),G__get_linked_tagnum(&G__eventdictTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableeventdictT() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RPRootDumpPattern>",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::vector<int> >",117,G__get_linked_tagnum(&G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<int,allocator<int> >,less<unsigned int> >",117,G__get_linked_tagnum(&G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RPRootDumpTrackInfo>",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),256,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),1,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo),257,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* T2Event */
static void G__setup_memvarT2Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_T2Event));
   { T2Event *p; p=(T2Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Pad_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_row=",0,"strip row   ");
   G__memvar_setup((void*)((long)(&p->Pad_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_col=",0,"strip column   ");
   G__memvar_setup((void*)((long)(&p->Pad_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_det=",0,"symbolic id of the detector containind the pad");
   G__memvar_setup((void*)((long)(&p->Strip_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_row=",0,"strip row");
   G__memvar_setup((void*)((long)(&p->Strip_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_col=",0,"strip column");
   G__memvar_setup((void*)((long)(&p->Strip_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_det=",0,"symbolic id of the detector containind the strip");
   G__memvar_setup((void*)((long)(&p->TrkEta_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkRmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkRmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAx=",0,"slope of the track projection in the XZ plane");
   G__memvar_setup((void*)((long)(&p->TrkAy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAy=",0,"slope of the track projection in the YZ plane");
   G__memvar_setup((void*)((long)(&p->TrkX0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkX0=",0,"X at Z=0 for the XZ projected track  ");
   G__memvar_setup((void*)((long)(&p->TrkY0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkY0=",0,"Y at Z=0 for the XZ projected track");
   G__memvar_setup((void*)((long)(&p->TrkPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi=",0,"Trk Phi (XY fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2XProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2XProb=",0,"Chi2-X probability (goodness of the XZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2YProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2YProb=",0,"Chi2-Y probability (goodness of the YZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkClass1HitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkClass1HitCounter=",0,"Number of class1 Hit in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkHitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkHitCounter=",0,"Number of class1 + cluster Pad hits in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkThetaR_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkThetaR_RZFit=",0,"Trk Polar angle obtained tracking in the Rz plane");
   G__memvar_setup((void*)((long)(&p->TrkEta_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_RZFit=",0,"Trk Eta obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkPhi_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi_RZFit=",0,"Trk Phi obtained with a constant fit.");
   G__memvar_setup((void*)((long)(&p->TrkZ0_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZ0_RZFit=",0,"Crossing Point between Trk and Z Axis obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBX_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBX_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBY_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBY_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkChiProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChiProb=",0,"Make sense only with T2TrackProducer3");
   G__memvar_setup((void*)((long)(&p->Trknumpadonly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumpadonly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumstriponly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumstriponly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitall)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitacl1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitacl1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitPhi=",0,"Phi position of all the Hits (deg)");
   G__memvar_setup((void*)((long)(&p->HitR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitR=",0,"R position of all the Hits (mm)");
   G__memvar_setup((void*)((long)(&p->HitType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitType=",0,"0-> only pad; 1-> only strip 2->Class 1 Hit (superimposition Pad/Strip)");
   G__memvar_setup((void*)((long)(&p->HitNumPad)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumPad=",0,"Cluster Pad Size ");
   G__memvar_setup((void*)((long)(&p->HitNumStrip)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumStrip=",0,"Cluster Strip Size");
   G__memvar_setup((void*)((long)(&p->TrkEntryX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryX=",0,"Trk Entry point X");
   G__memvar_setup((void*)((long)(&p->TrkEntryY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryY=",0,"Trk Entry point Y ");
   G__memvar_setup((void*)((long)(&p->TrkEntryZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryZ=",0,"Trk Entry point Z");
   G__memvar_setup((void*)((long)(&p->TrkExitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitX=",0,"Trk Exit point X");
   G__memvar_setup((void*)((long)(&p->TrkExitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitY=",0,"Trk Exit point Y  ");
   G__memvar_setup((void*)((long)(&p->TrkExitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitZ=",0,"Trk Exit point Z");
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),108,0,0,-1,-1,-1,1,"run_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_no)-(long)(p)),108,0,0,-1,-1,-1,1,"ev_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pad_noise)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Pad_noise=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"its_var1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"its_var2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* T1Event */
static void G__setup_memvarT1Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_T1Event));
   { T1Event *p; p=(T1Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->DigiStripA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkX0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkY0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkY0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZatRmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZatRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkRmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkChi2OverN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2OverN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),108,0,0,-1,-1,-1,1,"run_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_no)-(long)(p)),108,0,0,-1,-1,-1,1,"ev_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->its_var1)-(long)(p)),100,0,0,-1,-1,-1,1,"its_var1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->its_var2)-(long)(p)),105,0,0,-1,-1,-1,1,"its_var2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TriggerData */
static void G__setup_memvarTriggerData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_TriggerData));
   { TriggerData *p; p=(TriggerData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),98,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_num)-(long)(p)),104,0,0,-1,-1,-1,1,"event_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bunch_num)-(long)(p)),104,0,0,-1,-1,-1,1,"bunch_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->src_id)-(long)(p)),104,0,0,-1,-1,-1,1,"src_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->orbit_num)-(long)(p)),104,0,0,-1,-1,-1,1,"orbit_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->revision_num)-(long)(p)),98,0,0,-1,-1,-1,1,"revision_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_num)-(long)(p)),104,0,0,-1,-1,-1,1,"run_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger_num)-(long)(p)),104,0,0,-1,-1,-1,1,"trigger_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inhibited_triggers_num)-(long)(p)),104,0,0,-1,-1,-1,1,"inhibited_triggers_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->input_status_bits)-(long)(p)),104,0,0,-1,-1,-1,1,"input_status_bits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventMetaData */
static void G__setup_memvarEventMetaData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_EventMetaData));
   { EventMetaData *p; p=(EventMetaData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"run_no=",0,"ULong_t unsigned long ");
   G__memvar_setup((void*)((long)(&p->event_no)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"event_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->daq_event_number)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"daq_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"timestamp=",0,"ULong64_t, unsigned long long");
   G__memvar_setup((void*)((long)(&p->optoRx_Id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_Id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->optoRx_BX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_BX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->optoRx_LV1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_LV1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpDigiInfo */
static void G__setup_memvarRPRootDumpDigiInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo));
   { RPRootDumpDigiInfo *p; p=(RPRootDumpDigiInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->numberOfClusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"numberOfClusters=",0,"number of clusters in a given plane (indexed from 0 to 9)");
   G__memvar_setup((void*)((long)(&p->numberOfPlanesOn)-(long)(p)),104,0,0,-1,-1,-1,1,"numberOfPlanesOn=",0,"number of planes with at least one cluster");
   G__memvar_setup((void*)((long)(&p->uPlanesOn)-(long)(p)),104,0,0,-1,-1,-1,1,"uPlanesOn=",0,"number of U planes with at least one cluster");
   G__memvar_setup((void*)((long)(&p->vPlanesOn)-(long)(p)),104,0,0,-1,-1,-1,1,"vPlanesOn=",0,"number of V planes with at least one cluster");
   G__memvar_setup((void*)((long)(&p->planeId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"planeId=",0,"plane ID for a given cluster (array index)");
   G__memvar_setup((void*)((long)(&p->clusterSize)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"clusterSize=",0,"cluster size of a given cluster");
   G__memvar_setup((void*)((long)(&p->centralStrip)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"centralStrip=",0,"central strip of a given cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpReconstructedProton */
static void G__setup_memvarRPRootDumpReconstructedProton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton));
   { RPRootDumpReconstructedProton *p; p=(RPRootDumpReconstructedProton*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->valid)-(long)(p)),103,0,0,-1,-1,-1,1,"valid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thx)-(long)(p)),100,0,0,-1,-1,-1,1,"thx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thy)-(long)(p)),100,0,0,-1,-1,-1,1,"thy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),100,0,0,-1,-1,-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tx)-(long)(p)),100,0,0,-1,-1,-1,1,"tx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ty)-(long)(p)),100,0,0,-1,-1,-1,1,"ty=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xi)-(long)(p)),100,0,0,-1,-1,-1,1,"xi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x0)-(long)(p)),100,0,0,-1,-1,-1,1,"x0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y0)-(long)(p)),100,0,0,-1,-1,-1,1,"y0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chindf)-(long)(p)),100,0,0,-1,-1,-1,1,"chindf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpReconstructedProtonPair */
static void G__setup_memvarRPRootDumpReconstructedProtonPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair));
   { RPRootDumpReconstructedProtonPair *p; p=(RPRootDumpReconstructedProtonPair*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->valid)-(long)(p)),103,0,0,-1,-1,-1,1,"valid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thxr)-(long)(p)),100,0,0,-1,-1,-1,1,"thxr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thyr)-(long)(p)),100,0,0,-1,-1,-1,1,"thyr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xir)-(long)(p)),100,0,0,-1,-1,-1,1,"xir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phir)-(long)(p)),100,0,0,-1,-1,-1,1,"phir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thxl)-(long)(p)),100,0,0,-1,-1,-1,1,"thxl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thyl)-(long)(p)),100,0,0,-1,-1,-1,1,"thyl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xil)-(long)(p)),100,0,0,-1,-1,-1,1,"xil=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phil)-(long)(p)),100,0,0,-1,-1,-1,1,"phil=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x0)-(long)(p)),100,0,0,-1,-1,-1,1,"x0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y0)-(long)(p)),100,0,0,-1,-1,-1,1,"y0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z0)-(long)(p)),100,0,0,-1,-1,-1,1,"z0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chindf)-(long)(p)),100,0,0,-1,-1,-1,1,"chindf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tr)-(long)(p)),100,0,0,-1,-1,-1,1,"tr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->txr)-(long)(p)),100,0,0,-1,-1,-1,1,"txr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tyr)-(long)(p)),100,0,0,-1,-1,-1,1,"tyr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tl)-(long)(p)),100,0,0,-1,-1,-1,1,"tl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->txl)-(long)(p)),100,0,0,-1,-1,-1,1,"txl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tyl)-(long)(p)),100,0,0,-1,-1,-1,1,"tyl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),100,0,0,-1,-1,-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPEvent */
static void G__setup_memvarRPEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPEvent));
   { RPEvent *p; p=(RPEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->rec_prot_left)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton),-1,-1,1,"rec_prot_left=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rec_prot_right)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton),-1,-1,1,"rec_prot_right=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rec_prot_pair)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair),-1,-1,1,"rec_prot_pair=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpPattern */
static void G__setup_memvarRPRootDumpPattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern));
   { RPRootDumpPattern *p; p=(RPRootDumpPattern*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->a)-(long)(p)),100,0,0,-1,-1,-1,1,"a=",0,"slope in rad");
   G__memvar_setup((void*)((long)(&p->b)-(long)(p)),100,0,0,-1,-1,-1,1,"b=",0,"intercept (at the middle of the RP) in mm");
   G__memvar_setup((void*)((long)(&p->w)-(long)(p)),100,0,0,-1,-1,-1,1,"w=",0,"weight");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpPatternInfo */
static void G__setup_memvarRPRootDumpPatternInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo));
   { RPRootDumpPatternInfo *p; p=(RPRootDumpPatternInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->u)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR),G__defined_typename("vector<RPRootDumpPattern>"),-1,1,"u=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR),G__defined_typename("vector<RPRootDumpPattern>"),-1,1,"v=",0,"arrays of recognized patterns in u and v projections");
   G__memvar_setup((void*)((long)(&p->fittable)-(long)(p)),103,0,0,-1,-1,-1,1,"fittable=",0,"whether there is one (and only one) combined u-v pattern worth fitting");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpTrackInfo */
static void G__setup_memvarRPRootDumpTrackInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo));
   { RPRootDumpTrackInfo *p; p=(RPRootDumpTrackInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->valid)-(long)(p)),103,0,0,-1,-1,-1,1,"valid=",0,"whether track fit is valid");
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,-1,-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,-1,-1,1,"z=",0,"track fit interpolated to the middle of the RP");
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2=",0,"fit chi square");
   G__memvar_setup((void*)((long)(&p->chi2ndf)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2ndf=",0,"fit chi square divided by the number of degrees of freedom");
   G__memvar_setup((void*)((long)(&p->entries)-(long)(p)),104,0,0,-1,-1,-1,1,"entries=",0,"the number of contributing hits");
   G__memvar_setup((void*)((long)(&p->res_x)-(long)(p)),100,0,0,-1,-1,-1,1,"res_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res_y)-(long)(p)),100,0,0,-1,-1,-1,1,"res_y=",0,"seem not used");
   G__memvar_setup((void*)((long)(&p->u_sect)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"u_sect=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_sect)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"v_sect=",0,"list of active trigger sectors calculated from (strip) data");
   G__memvar_setup((void*)((long)(&p->u_sect_no)-(long)(p)),105,0,0,-1,-1,-1,1,"u_sect_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_sect_no)-(long)(p)),105,0,0,-1,-1,-1,1,"v_sect_no=",0,"sizes of u_sect and v_sect vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NtupleInfo */
static void G__setup_memvarNtupleInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo));
   { NtupleInfo *p; p=(NtupleInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->minOrbit)-(long)(p)),105,0,0,-1,-1,-1,1,"minOrbit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxOrbit)-(long)(p)),105,0,0,-1,-1,-1,1,"maxOrbit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->orbits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<unsigned int,std::vector<int> >"),-1,1,"orbits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventdictTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > */
static void G__setup_memvarvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   { vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > *p; p=(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvareventdictT() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncT2Event(void) {
   /* T2Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_T2Event));
   G__memfunc_setup("T2Event",648,G__eventdictT_168_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_T2Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_168_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&T2Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&T2Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&T2Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("T2Event", 648, G__eventdictT_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_T2Event), -1, 0, 1, 1, 1, 0, "u 'T2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~T2Event", 774, G__eventdictT_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_T2Event), -1, 1, 1, 1, 1, 0, "u 'T2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncT1Event(void) {
   /* T1Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_T1Event));
   G__memfunc_setup("T1Event",647,G__eventdictT_173_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_T1Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_173_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&T1Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_173_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_173_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&T1Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_173_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&T1Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_173_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_173_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_173_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T1Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_173_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_173_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T1Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("T1Event", 647, G__eventdictT_173_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_T1Event), -1, 0, 1, 1, 1, 0, "u 'T1Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~T1Event", 773, G__eventdictT_173_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_173_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_T1Event), -1, 1, 1, 1, 1, 0, "u 'T1Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTriggerData(void) {
   /* TriggerData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_TriggerData));
   G__memfunc_setup("TriggerData",1102,G__eventdictT_174_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_TriggerData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_174_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TriggerData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_174_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_174_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TriggerData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_174_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TriggerData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_174_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_174_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_174_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TriggerData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_174_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_174_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TriggerData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TriggerData", 1102, G__eventdictT_174_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_TriggerData), -1, 0, 1, 1, 1, 0, "u 'TriggerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TriggerData", 1228, G__eventdictT_174_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_174_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_TriggerData), -1, 1, 1, 1, 1, 0, "u 'TriggerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventMetaData(void) {
   /* EventMetaData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_EventMetaData));
   G__memfunc_setup("EventMetaData",1283,G__eventdictT_175_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_EventMetaData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_175_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventMetaData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_175_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_175_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventMetaData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_175_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventMetaData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_175_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_175_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_175_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventMetaData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_175_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_175_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventMetaData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventMetaData", 1283, G__eventdictT_175_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_EventMetaData), -1, 0, 1, 1, 1, 0, "u 'EventMetaData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventMetaData", 1409, G__eventdictT_175_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_175_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_EventMetaData), -1, 1, 1, 1, 1, 0, "u 'EventMetaData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpDigiInfo(void) {
   /* RPRootDumpDigiInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo));
   G__memfunc_setup("RPRootDumpDigiInfo",1765,G__eventdictT_176_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_176_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpDigiInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_176_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpDigiInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_176_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpDigiInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_176_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpDigiInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_176_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_176_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpDigiInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_176_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpDigiInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_176_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpDigiInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_176_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpDigiInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpDigiInfo", 1765, G__eventdictT_176_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpDigiInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpDigiInfo", 1891, G__eventdictT_176_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_176_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpDigiInfo), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpDigiInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpReconstructedProton(void) {
   /* RPRootDumpReconstructedProton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton));
   G__memfunc_setup("RPRootDumpReconstructedProton",3011,G__eventdictT_177_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_177_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpReconstructedProton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_177_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_177_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpReconstructedProton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_177_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpReconstructedProton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_177_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_177_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_177_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpReconstructedProton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_177_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_177_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpReconstructedProton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpReconstructedProton", 3011, G__eventdictT_177_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpReconstructedProton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpReconstructedProton", 3137, G__eventdictT_177_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_177_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProton), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpReconstructedProton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpReconstructedProtonPair(void) {
   /* RPRootDumpReconstructedProtonPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair));
   G__memfunc_setup("RPRootDumpReconstructedProtonPair",3407,G__eventdictT_178_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_178_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpReconstructedProtonPair::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_178_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProtonPair::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_178_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpReconstructedProtonPair::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_178_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpReconstructedProtonPair::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_178_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_178_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProtonPair::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_178_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpReconstructedProtonPair::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_178_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpReconstructedProtonPair::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_178_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpReconstructedProtonPair::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpReconstructedProtonPair", 3407, G__eventdictT_178_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpReconstructedProtonPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpReconstructedProtonPair", 3533, G__eventdictT_178_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_178_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpReconstructedProtonPair), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpReconstructedProtonPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPEvent(void) {
   /* RPEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPEvent));
   G__memfunc_setup("RPEvent",676,G__eventdictT_179_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_179_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_179_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_179_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_179_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_179_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_179_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_179_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_179_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_179_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPEvent", 676, G__eventdictT_179_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_RPEvent), -1, 0, 1, 1, 1, 0, "u 'RPEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPEvent", 802, G__eventdictT_179_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_179_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPEvent), -1, 1, 1, 1, 1, 0, "u 'RPEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpPattern(void) {
   /* RPRootDumpPattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern));
   G__memfunc_setup("RPRootDumpPattern",1722,G__eventdictT_180_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern), -1, 0, 3, 1, 1, 0, 
"d - - 0 '0.' _a d - - 0 '0.' _b "
"d - - 0 '0.' _w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_180_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpPattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_180_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_180_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpPattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_180_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpPattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_180_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_180_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_180_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpPattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_180_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_180_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpPattern::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpPattern", 1722, G__eventdictT_180_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpPattern", 1848, G__eventdictT_180_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_180_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPattern), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpPatternInfo(void) {
   /* RPRootDumpPatternInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo));
   G__memfunc_setup("RPRootDumpPatternInfo",2118,G__eventdictT_181_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo), -1, 0, 1, 1, 1, 0, "g - - 0 'false' _f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_181_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpPatternInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_181_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPatternInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_181_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpPatternInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_181_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpPatternInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_181_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_181_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPatternInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_181_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpPatternInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_181_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpPatternInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_181_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpPatternInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpPatternInfo", 2118, G__eventdictT_181_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpPatternInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpPatternInfo", 2244, G__eventdictT_181_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_181_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpPatternInfo), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpPatternInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpTrackInfo(void) {
   /* RPRootDumpTrackInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo));
   G__memfunc_setup("RPRootDumpTrackInfo",1885,G__eventdictT_186_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_186_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpTrackInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_186_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpTrackInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_186_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpTrackInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_186_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpTrackInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_186_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_186_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpTrackInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_186_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpTrackInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_186_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpTrackInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_186_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpTrackInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpTrackInfo", 1885, G__eventdictT_186_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpTrackInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpTrackInfo", 2011, G__eventdictT_186_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_186_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpTrackInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNtupleInfo(void) {
   /* NtupleInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo));
   G__memfunc_setup("NtupleInfo",1028,G__eventdictT_422_0_1, 105, G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventdictT_422_0_2, 85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NtupleInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventdictT_422_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventdictT_422_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NtupleInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventdictT_422_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NtupleInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventdictTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventdictT_422_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventdictT_422_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventdictT_422_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NtupleInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventdictT_422_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventdictT_422_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NtupleInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NtupleInfo", 1028, G__eventdictT_422_0_14, (int) ('i'), G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo), -1, 0, 1, 1, 1, 0, "u 'NtupleInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NtupleInfo", 1154, G__eventdictT_422_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventdictT_422_0_16, (int) ('u'), G__get_linked_tagnum(&G__eventdictTLN_NtupleInfo), -1, 1, 1, 1, 1, 0, "u 'NtupleInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR(void) {
   /* vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR));
   G__memfunc_setup("at",213,G__eventdictT_433_0_1, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__eventdictT_433_0_2, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__eventdictT_433_0_3, 117, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__eventdictT_433_0_4, 117, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__eventdictT_433_0_5, 117, G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__eventdictT_433_0_6, 117, G__get_linked_tagnum(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__eventdictT_433_0_7, 107, -1, G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__eventdictT_433_0_8, 107, -1, G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdictT_433_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__eventdictT_433_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - sz u 'RPRootDumpTrackInfo' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__eventdictT_433_0_11, 107, -1, G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__eventdictT_433_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdictT_433_0_13, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__eventdictT_433_0_14, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), G__defined_typename("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >",5710,G__eventdictT_433_0_15, 105, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >",5710,G__eventdictT_433_0_16, 105, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n u 'RPRootDumpTrackInfo' - 11 'RPRootDumpTrackInfo()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >",5710,G__eventdictT_433_0_17, 105, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >",5710,G__eventdictT_433_0_18, 105, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator' 10 - first u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__eventdictT_433_0_19, 117, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__eventdictT_433_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__eventdictT_433_0_21, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__eventdictT_433_0_22, 117, G__get_linked_tagnum(&G__eventdictTLN_RPRootDumpTrackInfo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__eventdictT_433_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RPRootDumpTrackInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__eventdictT_433_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdictT_433_0_25, 117, G__get_linked_tagnum(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - position u 'RPRootDumpTrackInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdictT_433_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - position u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator' 10 - first "
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__eventdictT_433_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - position k - 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::size_type' 0 - n "
"u 'RPRootDumpTrackInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__eventdictT_433_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdictT_433_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__eventdictT_433_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - first u 'vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__eventdictT_433_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >", 5836, G__eventdictT_433_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunceventdictT() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaleventdictT() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funceventdictT() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__eventdictTLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_T2Event = { "T2Event" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_T1Event = { "T1Event" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_TriggerData = { "TriggerData" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_EventMetaData = { "EventMetaData" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpDigiInfo = { "RPRootDumpDigiInfo" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpReconstructedProton = { "RPRootDumpReconstructedProton" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpReconstructedProtonPair = { "RPRootDumpReconstructedProtonPair" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPEvent = { "RPEvent" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpPattern = { "RPRootDumpPattern" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpPatternInfo = { "RPRootDumpPatternInfo" , 115 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR = { "vector<RPRootDumpPattern,allocator<RPRootDumpPattern> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RPRootDumpPattern,allocator<RPRootDumpPattern> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_RPRootDumpTrackInfo = { "RPRootDumpTrackInfo" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_NtupleInfo = { "NtupleInfo" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<unsigned int,vector<int,allocator<int> >,less<unsigned int>,allocator<pair<const unsigned int,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR = { "vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator = { "vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator" , 99 , -1 };
G__linked_taginfo G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableeventdictT() {
  G__eventdictTLN_TClass.tagnum = -1 ;
  G__eventdictTLN_TBuffer.tagnum = -1 ;
  G__eventdictTLN_TMemberInspector.tagnum = -1 ;
  G__eventdictTLN_TObject.tagnum = -1 ;
  G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__eventdictTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__eventdictTLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictTLN_T2Event.tagnum = -1 ;
  G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__eventdictTLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictTLN_T1Event.tagnum = -1 ;
  G__eventdictTLN_TriggerData.tagnum = -1 ;
  G__eventdictTLN_EventMetaData.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpDigiInfo.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpReconstructedProton.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpReconstructedProtonPair.tagnum = -1 ;
  G__eventdictTLN_RPEvent.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpPattern.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpPatternInfo.tagnum = -1 ;
  G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR.tagnum = -1 ;
  G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventdictTLN_RPRootDumpTrackInfo.tagnum = -1 ;
  G__eventdictTLN_NtupleInfo.tagnum = -1 ;
  G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR.tagnum = -1 ;
  G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator.tagnum = -1 ;
  G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableeventdictT() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__eventdictTLN_TClass);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_TObject);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_T2Event),sizeof(T2Event),-1,292096,(char*)NULL,G__setup_memvarT2Event,G__setup_memfuncT2Event);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_T1Event),sizeof(T1Event),-1,291072,(char*)NULL,G__setup_memvarT1Event,G__setup_memfuncT1Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_TriggerData),sizeof(TriggerData),-1,291072,(char*)NULL,G__setup_memvarTriggerData,G__setup_memfuncTriggerData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_EventMetaData),sizeof(EventMetaData),-1,291072,(char*)NULL,G__setup_memvarEventMetaData,G__setup_memfuncEventMetaData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpDigiInfo),sizeof(RPRootDumpDigiInfo),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpDigiInfo,G__setup_memfuncRPRootDumpDigiInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpReconstructedProton),sizeof(RPRootDumpReconstructedProton),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpReconstructedProton,G__setup_memfuncRPRootDumpReconstructedProton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpReconstructedProtonPair),sizeof(RPRootDumpReconstructedProtonPair),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpReconstructedProtonPair,G__setup_memfuncRPRootDumpReconstructedProtonPair);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPEvent),sizeof(RPEvent),-1,291072,(char*)NULL,G__setup_memvarRPEvent,G__setup_memfuncRPEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpPattern),sizeof(RPRootDumpPattern),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpPattern,G__setup_memfuncRPRootDumpPattern);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpPatternInfo),sizeof(RPRootDumpPatternInfo),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpPatternInfo,G__setup_memfuncRPRootDumpPatternInfo);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpPatterncOallocatorlERPRootDumpPatterngRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_RPRootDumpTrackInfo),sizeof(RPRootDumpTrackInfo),-1,291072,(char*)NULL,G__setup_memvarRPRootDumpTrackInfo,G__setup_memfuncRPRootDumpTrackInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_NtupleInfo),sizeof(NtupleInfo),-1,291072,(char*)NULL,G__setup_memvarNtupleInfo,G__setup_memfuncNtupleInfo);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_maplEunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR),sizeof(vector<RPRootDumpTrackInfo,allocator<RPRootDumpTrackInfo> >),-1,298752,(char*)NULL,G__setup_memvarvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR,G__setup_memfuncvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_vectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__eventdictTLN_reverse_iteratorlEvectorlERPRootDumpTrackInfocOallocatorlERPRootDumpTrackInfogRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupeventdictT(void) {
  G__check_setup_version(30051515,"G__cpp_setupeventdictT()");
  G__set_cpp_environmenteventdictT();
  G__cpp_setup_tagtableeventdictT();

  G__cpp_setup_inheritanceeventdictT();

  G__cpp_setup_typetableeventdictT();

  G__cpp_setup_memvareventdictT();

  G__cpp_setup_memfunceventdictT();
  G__cpp_setup_globaleventdictT();
  G__cpp_setup_funceventdictT();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunceventdictT();
  return;
}
class G__cpp_setup_initeventdictT {
  public:
    G__cpp_setup_initeventdictT() { G__add_setup_func("eventdictT",(G__incsetup)(&G__cpp_setupeventdictT)); G__call_setup_funcs(); }
   ~G__cpp_setup_initeventdictT() { G__remove_setup_func("eventdictT"); }
};
G__cpp_setup_initeventdictT G__cpp_setup_initializereventdictT;

