# Auto generated configuration file
# using: 
# Revision: 1.341 
# Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/PyReleaseValidation/python/ConfigBuilder.py,v 
# with command line options: cmsDriver.py Configuration/Generator/python/SingleElectronPt10_cfi.py --mc -s GEN,SIM,DIGI,L1,DIGI2RAW,RAW2DIGI,RECO --eventcontent RECOSIM --scenario HeavyIons --relval None --datatier GEN-SIM-RECO --conditions STARTHI44_V11::All -n 5 --no_exec
import FWCore.ParameterSet.Config as cms

from RecoTracker.Configuration.RecoTracker_cff import *
from RecoPixelVertexing.Configuration.RecoPixelVertexing_cff import *
from EventFilter.SiStripRawToDigi.SiStripDigiToRaw_cfi import *
from EventFilter.RawDataCollector.rawDataCollector_cfi import *

process = cms.Process('RECO')

# import of standard configurations
process.load('Configuration.StandardSequences.Services_cff')
process.load('SimGeneral.HepPDTESSource.pythiapdt_cfi')
process.load('FWCore.MessageService.MessageLogger_cfi')
process.load('Configuration.EventContent.EventContentHeavyIons_cff')
process.load('SimGeneral.MixingModule.mixNoPU_cfi')
process.load('Configuration.StandardSequences.GeometryDB_cff')
process.load('Configuration.StandardSequences.MagneticField_38T_cff')
process.load('Configuration.StandardSequences.Generator_cff')
process.load('IOMC.EventVertexGenerators.VtxSmearedRealistic7TeV2011Collision_cfi')
process.load('GeneratorInterface.Core.genFilterSummary_cff')
process.load('Configuration.StandardSequences.SimIdeal_cff')
process.load('Configuration.StandardSequences.Digi_cff')
process.load('Configuration.StandardSequences.SimL1Emulator_cff')
process.load('Configuration.StandardSequences.DigiToRaw_cff')
process.load('Configuration.StandardSequences.RawToDigi_cff')
process.load('Configuration.StandardSequences.ReconstructionHeavyIons_cff')
process.load('Configuration.StandardSequences.EndOfProcess_cff')
process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(5)
)

# Input source
process.source = cms.Source("EmptySource")

process.options = cms.untracked.PSet(

)

# Production Info
process.configurationMetadata = cms.untracked.PSet(
    version = cms.untracked.string('$Revision: 1.3 $'),
    annotation = cms.untracked.string('Configuration/Generator/python/SingleElectronPt10_cfi.py nevts:10'),
    name = cms.untracked.string('PyReleaseValidation')
)

# Output definition

process.RECOSIMoutput = cms.OutputModule("PoolOutputModule",
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = process.RECOSIMEventContent.outputCommands,
    fileName = cms.untracked.string('FILEXYZ'),
    dataset = cms.untracked.PSet(
        filterName = cms.untracked.string(''),
        dataTier = cms.untracked.string('GEN-SIM-RECO')
    ),
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('generation_step')
    )
)

# Additional output definition

# Other statements
process.GlobalTag.globaltag = 'STARTHI44_V11::All'

process.generator = cms.EDProducer("FlatRandomPtGunProducer",
    PGunParameters = cms.PSet(
        MaxPt = cms.double(10.01),
        MinPt = cms.double(9.99),
        PartID = cms.vint32(11),
        MaxEta = cms.double(2.5),
        MaxPhi = cms.double(3.14159265359),
        MinEta = cms.double(-2.5),
        MinPhi = cms.double(-3.14159265359)
    ),
    Verbosity = cms.untracked.int32(0),
    psethack = cms.string('single electron pt 10'),
    AddAntiParticle = cms.bool(True),
    firstRun = cms.untracked.uint32(1)
)


# Path and EndPath definitions
process.generation_step = cms.Path(process.pgen_hi)
process.simulation_step = cms.Path(process.psim)
process.digitisation_step = cms.Path(process.pdigi)
process.L1simulation_step = cms.Path(process.SimL1Emulator)
process.digi2raw_step = cms.Path(process.DigiToRaw)
process.raw2digi_step = cms.Path(process.RawToDigi)
process.reconstruction_step = cms.Path(process.reconstructionHeavyIons)
process.genfiltersummary_step = cms.EndPath(process.genFilterSummary)
process.endjob_step = cms.EndPath(process.endOfProcess)
process.RECOSIMoutput_step = cms.EndPath(process.RECOSIMoutput)

# Schedule definition
process.schedule = cms.Schedule(process.generation_step,process.genfiltersummary_step,process.simulation_step,process.digitisation_step,process.L1simulation_step,process.digi2raw_step,process.raw2digi_step,process.reconstruction_step,process.endjob_step,process.RECOSIMoutput_step)
# filter all path with the production filter sequence
for path in process.paths:
	getattr(process,path)._seq = process.generator * getattr(process,path)._seq 


def customise(process):

    process.generator = cms.EDFilter("CosmicRayGeneratorFilter",
                                     beammomentum = cms.double(1380),
                                     targetmomentum = cms.double(-1380),
                                     beamid = cms.int32(207),
                                     targetid = cms.int32(207),
                                     model = cms.int32(1),
                                     paramFileName = cms.string("/afs/cern.ch/user/c/cbaus/public/Externals/cms.param")
                                 )

    #Random Seed Generator
    your_seed=123
    process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
                                                       generator=cms.PSet(initialSeed=cms.untracked.uint32(your_seed)),
                                                       VtxSmeared=cms.PSet(initialSeed=cms.untracked.uint32(your_seed)),
                                                       simSiPixelDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                engineName=cms.untracked.string('TRandom3')),
                                                       simSiStripDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                engineName=cms.untracked.string('TRandom3')),
                                                       g4SimHits=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                          engineName=cms.untracked.string('TRandom3')),
                                                       simEcalUnsuppressedDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                         engineName=cms.untracked.string('TRandom3')),
                                                       simHcalUnsuppressedDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                         engineName=cms.untracked.string('TRandom3')),
                                                       simCastorDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                               engineName=cms.untracked.string('TRandom3')),
                                                       simMuonCSCDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                engineName=cms.untracked.string('TRandom3')),
                                                       simMuonDTDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                               engineName=cms.untracked.string('TRandom3')),
                                                       simMuonRPCDigis=cms.PSet(initialSeed=cms.untracked.uint32(your_seed),
                                                                                engineName=cms.untracked.string('TRandom3'))
                                                       )


    # G E A N T 4   C O N F I G
    process.g4SimHits.Generator.MinEtaCut =-7.0
    process.g4SimHits.Generator.MaxEtaCut = 7
#    process.g4SimHits.CastorSD.nonCompensationFactor = cms.double(0.77)
    #process.g4SimHits.CastorSD.minEnergyInGeVforUsingSLibrary = 1 #FULL Simulation CASTOR



    # M E S S A G I N G
    #Module Tracing
    #process.Timing = cms.Service("Timing")
    # initialize MessageLogger and output report
    #process.load("FWCore.MessageLogger.MessageLogger_cfi")
     #process.MessageLogger = cms.Service("MessageLogger",
    #                                    destinations= cms.untracked.vstring('detailedInfo', 'critical', 'cerr'),
    #                                    critical=cms.untracked.PSet(threshold = cms.untracked.string('ERROR')),
    #                                    detailedInfo=cms.untracked.PSet(threshold = cms.untracked.string('INFO')),
    #                                    cerr=cms.untracked.PSet(threshold = cms.untracked.string('WARNING'))
    #                                    )
 
    # A D D I T I O N A L    S E T T I N G S
    # to avoid 'too many clusters'
    initialStepSeeds               .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    lowPtTripletStepSeeds          .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    pixelPairStepSeeds             .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    detachedTripletStepSeeds       .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    mixedTripletStepSeedsA         .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    mixedTripletStepSeedsB         .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    pixelLessStepSeeds             .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    tobTecStepSeeds                .ClusterCheckPSet.doClusterCheck = cms.bool(False)
    photonConvTrajSeedFromSingleLeg.ClusterCheckPSet.doClusterCheck = cms.bool(False)
    
    # avoid 'number of triples exceed maximum'
    pixelTracks              .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)
    initialStepSeeds         .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)
    lowPtTripletStepSeeds    .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)
    detachedTripletStepSeeds .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)
    mixedTripletStepSeedsA   .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)
    mixedTripletStepSeedsB   .OrderedHitsFactoryPSet.GeneratorPSet.maxElement =  cms.uint32(0)

    #turn off TS (fix for wrong Castor Parameters DB version in every 44 to 50 tags) 
    process.castorreco = cms.EDProducer("CastorSimpleReconstructor",
                                        correctionPhaseNS = cms.double(0.0),
                                        digiLabel = cms.InputTag("castorDigis"),
                                        samplesToAdd = cms.int32(4),
                                        Subdetector = cms.string('CASTOR'),
                                        firstSample = cms.int32(4),
                                        correctForPhaseContainment = cms.bool(False),
                                        correctForTimeslew = cms.bool(False),
                                        tsFromDB = cms.untracked.bool(False) #here
                                        )
    return(process)

process = customise(process)
