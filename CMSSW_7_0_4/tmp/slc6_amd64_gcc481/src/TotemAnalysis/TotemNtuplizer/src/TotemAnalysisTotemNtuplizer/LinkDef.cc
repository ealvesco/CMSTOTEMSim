#include "TotemAnalysis/TotemNtuplizer/interface/RawDataFormats.h"
#include "TotemAnalysis/TotemNtuplizer/interface/TriggerDataFormats.h"
#include "TotemAnalysis/TotemNtuplizer/interface/RPRootJetInfo.h"
#include "TotemAnalysis/TotemNtuplizer/interface/T1Event.h"
#include "TotemAnalysis/TotemNtuplizer/interface/T2Event.h"
#include "TotemAnalysis/TotemNtuplizer/interface/RPTimingDetectorsNtuplizerHit.h"

#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ class EventMetaData+;
#pragma link C++ class TriggerData+;

#pragma link C++ class RPRootDumpJet;
#pragma link C++ class std::vector<RPRootDumpJet>;
#pragma link C++ class RPRootDumpJetInfo;
#pragma link C++ class RPRootDiffMassInfo;

#pragma link C++ class T2Event+;
#pragma link C++ class T1Event+;

#pragma link C++ class RPTimingDetectorsNtuplizerHit+;
#pragma link C++ class Point+;
#pragma link C++ class std::vector<RPTimingDetectorsNtuplizerHit>+;
#pragma link C++ class std::vector<Point>+;

#endif
//
// File generated by /afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/bin/rootcint at Mon Jul 11 23:54:55 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME tmpdIslc6_amd64_gcc481dIsrcdITotemAnalysisdITotemNtuplizerdIsrcdITotemAnalysisTotemNtuplizerdILinkDef
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LinkDef.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void EventMetaData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventMetaData(void *p = 0);
   static void *newArray_EventMetaData(Long_t size, void *p);
   static void delete_EventMetaData(void *p);
   static void deleteArray_EventMetaData(void *p);
   static void destruct_EventMetaData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventMetaData*)
   {
      ::EventMetaData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventMetaData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventMetaData", ::EventMetaData::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RawDataFormats.h", 8,
                  typeid(::EventMetaData), DefineBehavior(ptr, ptr),
                  &::EventMetaData::Dictionary, isa_proxy, 4,
                  sizeof(::EventMetaData) );
      instance.SetNew(&new_EventMetaData);
      instance.SetNewArray(&newArray_EventMetaData);
      instance.SetDelete(&delete_EventMetaData);
      instance.SetDeleteArray(&deleteArray_EventMetaData);
      instance.SetDestructor(&destruct_EventMetaData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventMetaData*)
   {
      return GenerateInitInstanceLocal((::EventMetaData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventMetaData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TriggerData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TriggerData(void *p = 0);
   static void *newArray_TriggerData(Long_t size, void *p);
   static void delete_TriggerData(void *p);
   static void deleteArray_TriggerData(void *p);
   static void destruct_TriggerData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TriggerData*)
   {
      ::TriggerData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TriggerData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TriggerData", ::TriggerData::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/TriggerDataFormats.h", 8,
                  typeid(::TriggerData), DefineBehavior(ptr, ptr),
                  &::TriggerData::Dictionary, isa_proxy, 4,
                  sizeof(::TriggerData) );
      instance.SetNew(&new_TriggerData);
      instance.SetNewArray(&newArray_TriggerData);
      instance.SetDelete(&delete_TriggerData);
      instance.SetDeleteArray(&deleteArray_TriggerData);
      instance.SetDestructor(&destruct_TriggerData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TriggerData*)
   {
      return GenerateInitInstanceLocal((::TriggerData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TriggerData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpJet(void *p = 0);
   static void *newArray_RPRootDumpJet(Long_t size, void *p);
   static void delete_RPRootDumpJet(void *p);
   static void deleteArray_RPRootDumpJet(void *p);
   static void destruct_RPRootDumpJet(void *p);
   static void streamer_RPRootDumpJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpJet*)
   {
      ::RPRootDumpJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpJet", ::RPRootDumpJet::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RPRootJetInfo.h", 42,
                  typeid(::RPRootDumpJet), DefineBehavior(ptr, ptr),
                  &::RPRootDumpJet::Dictionary, isa_proxy, 0,
                  sizeof(::RPRootDumpJet) );
      instance.SetNew(&new_RPRootDumpJet);
      instance.SetNewArray(&newArray_RPRootDumpJet);
      instance.SetDelete(&delete_RPRootDumpJet);
      instance.SetDeleteArray(&deleteArray_RPRootDumpJet);
      instance.SetDestructor(&destruct_RPRootDumpJet);
      instance.SetStreamerFunc(&streamer_RPRootDumpJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpJet*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDumpJetInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDumpJetInfo(void *p = 0);
   static void *newArray_RPRootDumpJetInfo(Long_t size, void *p);
   static void delete_RPRootDumpJetInfo(void *p);
   static void deleteArray_RPRootDumpJetInfo(void *p);
   static void destruct_RPRootDumpJetInfo(void *p);
   static void streamer_RPRootDumpJetInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDumpJetInfo*)
   {
      ::RPRootDumpJetInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDumpJetInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDumpJetInfo", ::RPRootDumpJetInfo::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RPRootJetInfo.h", 84,
                  typeid(::RPRootDumpJetInfo), DefineBehavior(ptr, ptr),
                  &::RPRootDumpJetInfo::Dictionary, isa_proxy, 0,
                  sizeof(::RPRootDumpJetInfo) );
      instance.SetNew(&new_RPRootDumpJetInfo);
      instance.SetNewArray(&newArray_RPRootDumpJetInfo);
      instance.SetDelete(&delete_RPRootDumpJetInfo);
      instance.SetDeleteArray(&deleteArray_RPRootDumpJetInfo);
      instance.SetDestructor(&destruct_RPRootDumpJetInfo);
      instance.SetStreamerFunc(&streamer_RPRootDumpJetInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDumpJetInfo*)
   {
      return GenerateInitInstanceLocal((::RPRootDumpJetInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDumpJetInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPRootDiffMassInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPRootDiffMassInfo(void *p = 0);
   static void *newArray_RPRootDiffMassInfo(Long_t size, void *p);
   static void delete_RPRootDiffMassInfo(void *p);
   static void deleteArray_RPRootDiffMassInfo(void *p);
   static void destruct_RPRootDiffMassInfo(void *p);
   static void streamer_RPRootDiffMassInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPRootDiffMassInfo*)
   {
      ::RPRootDiffMassInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPRootDiffMassInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPRootDiffMassInfo", ::RPRootDiffMassInfo::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RPRootJetInfo.h", 106,
                  typeid(::RPRootDiffMassInfo), DefineBehavior(ptr, ptr),
                  &::RPRootDiffMassInfo::Dictionary, isa_proxy, 0,
                  sizeof(::RPRootDiffMassInfo) );
      instance.SetNew(&new_RPRootDiffMassInfo);
      instance.SetNewArray(&newArray_RPRootDiffMassInfo);
      instance.SetDelete(&delete_RPRootDiffMassInfo);
      instance.SetDeleteArray(&deleteArray_RPRootDiffMassInfo);
      instance.SetDestructor(&destruct_RPRootDiffMassInfo);
      instance.SetStreamerFunc(&streamer_RPRootDiffMassInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPRootDiffMassInfo*)
   {
      return GenerateInitInstanceLocal((::RPRootDiffMassInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPRootDiffMassInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void T1Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_T1Event(void *p = 0);
   static void *newArray_T1Event(Long_t size, void *p);
   static void delete_T1Event(void *p);
   static void deleteArray_T1Event(void *p);
   static void destruct_T1Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::T1Event*)
   {
      ::T1Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::T1Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("T1Event", ::T1Event::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/T1Event.h", 6,
                  typeid(::T1Event), DefineBehavior(ptr, ptr),
                  &::T1Event::Dictionary, isa_proxy, 4,
                  sizeof(::T1Event) );
      instance.SetNew(&new_T1Event);
      instance.SetNewArray(&newArray_T1Event);
      instance.SetDelete(&delete_T1Event);
      instance.SetDeleteArray(&deleteArray_T1Event);
      instance.SetDestructor(&destruct_T1Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::T1Event*)
   {
      return GenerateInitInstanceLocal((::T1Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::T1Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void T2Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_T2Event(void *p = 0);
   static void *newArray_T2Event(Long_t size, void *p);
   static void delete_T2Event(void *p);
   static void deleteArray_T2Event(void *p);
   static void destruct_T2Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::T2Event*)
   {
      ::T2Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::T2Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("T2Event", ::T2Event::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/T2Event.h", 6,
                  typeid(::T2Event), DefineBehavior(ptr, ptr),
                  &::T2Event::Dictionary, isa_proxy, 4,
                  sizeof(::T2Event) );
      instance.SetNew(&new_T2Event);
      instance.SetNewArray(&newArray_T2Event);
      instance.SetDelete(&delete_T2Event);
      instance.SetDeleteArray(&deleteArray_T2Event);
      instance.SetDestructor(&destruct_T2Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::T2Event*)
   {
      return GenerateInitInstanceLocal((::T2Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::T2Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Point_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Point(void *p = 0);
   static void *newArray_Point(Long_t size, void *p);
   static void delete_Point(void *p);
   static void deleteArray_Point(void *p);
   static void destruct_Point(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Point*)
   {
      ::Point *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Point >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Point", ::Point::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RPTimingDetectorsNtuplizerHit.h", 7,
                  typeid(::Point), DefineBehavior(ptr, ptr),
                  &::Point::Dictionary, isa_proxy, 4,
                  sizeof(::Point) );
      instance.SetNew(&new_Point);
      instance.SetNewArray(&newArray_Point);
      instance.SetDelete(&delete_Point);
      instance.SetDeleteArray(&deleteArray_Point);
      instance.SetDestructor(&destruct_Point);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Point*)
   {
      return GenerateInitInstanceLocal((::Point*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Point*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RPTimingDetectorsNtuplizerHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RPTimingDetectorsNtuplizerHit(void *p = 0);
   static void *newArray_RPTimingDetectorsNtuplizerHit(Long_t size, void *p);
   static void delete_RPTimingDetectorsNtuplizerHit(void *p);
   static void deleteArray_RPTimingDetectorsNtuplizerHit(void *p);
   static void destruct_RPTimingDetectorsNtuplizerHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RPTimingDetectorsNtuplizerHit*)
   {
      ::RPTimingDetectorsNtuplizerHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RPTimingDetectorsNtuplizerHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RPTimingDetectorsNtuplizerHit", ::RPTimingDetectorsNtuplizerHit::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/TotemNtuplizer/interface/RPTimingDetectorsNtuplizerHit.h", 17,
                  typeid(::RPTimingDetectorsNtuplizerHit), DefineBehavior(ptr, ptr),
                  &::RPTimingDetectorsNtuplizerHit::Dictionary, isa_proxy, 4,
                  sizeof(::RPTimingDetectorsNtuplizerHit) );
      instance.SetNew(&new_RPTimingDetectorsNtuplizerHit);
      instance.SetNewArray(&newArray_RPTimingDetectorsNtuplizerHit);
      instance.SetDelete(&delete_RPTimingDetectorsNtuplizerHit);
      instance.SetDeleteArray(&deleteArray_RPTimingDetectorsNtuplizerHit);
      instance.SetDestructor(&destruct_RPTimingDetectorsNtuplizerHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RPTimingDetectorsNtuplizerHit*)
   {
      return GenerateInitInstanceLocal((::RPTimingDetectorsNtuplizerHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RPTimingDetectorsNtuplizerHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *EventMetaData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventMetaData::Class_Name()
{
   return "EventMetaData";
}

//______________________________________________________________________________
const char *EventMetaData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventMetaData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventMetaData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventMetaData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventMetaData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TriggerData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerData::Class_Name()
{
   return "TriggerData";
}

//______________________________________________________________________________
const char *TriggerData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TriggerData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpJet::Class_Name()
{
   return "RPRootDumpJet";
}

//______________________________________________________________________________
const char *RPRootDumpJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDumpJetInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDumpJetInfo::Class_Name()
{
   return "RPRootDumpJetInfo";
}

//______________________________________________________________________________
const char *RPRootDumpJetInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJetInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDumpJetInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJetInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDumpJetInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJetInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDumpJetInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDumpJetInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPRootDiffMassInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPRootDiffMassInfo::Class_Name()
{
   return "RPRootDiffMassInfo";
}

//______________________________________________________________________________
const char *RPRootDiffMassInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDiffMassInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPRootDiffMassInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPRootDiffMassInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPRootDiffMassInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDiffMassInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPRootDiffMassInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPRootDiffMassInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *T1Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *T1Event::Class_Name()
{
   return "T1Event";
}

//______________________________________________________________________________
const char *T1Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int T1Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void T1Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *T1Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T1Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *T2Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *T2Event::Class_Name()
{
   return "T2Event";
}

//______________________________________________________________________________
const char *T2Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int T2Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void T2Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *T2Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Point::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Point::Class_Name()
{
   return "Point";
}

//______________________________________________________________________________
const char *Point::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Point*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Point::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Point*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Point::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Point*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Point::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Point*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RPTimingDetectorsNtuplizerHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RPTimingDetectorsNtuplizerHit::Class_Name()
{
   return "RPTimingDetectorsNtuplizerHit";
}

//______________________________________________________________________________
const char *RPTimingDetectorsNtuplizerHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPTimingDetectorsNtuplizerHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RPTimingDetectorsNtuplizerHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RPTimingDetectorsNtuplizerHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RPTimingDetectorsNtuplizerHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPTimingDetectorsNtuplizerHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RPTimingDetectorsNtuplizerHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RPTimingDetectorsNtuplizerHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void EventMetaData::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventMetaData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventMetaData::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventMetaData::Class(),this);
   }
}

//______________________________________________________________________________
void EventMetaData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventMetaData.
      TClass *R__cl = ::EventMetaData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_no", &event_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_event_number", &daq_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_Id", (void*)&optoRx_Id);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_Id, "optoRx_Id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_BX", (void*)&optoRx_BX);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_BX, "optoRx_BX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optoRx_LV1", (void*)&optoRx_LV1);
      R__insp.InspectMember("vector<unsigned int>", (void*)&optoRx_LV1, "optoRx_LV1.", false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventMetaData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventMetaData : new ::EventMetaData;
   }
   static void *newArray_EventMetaData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventMetaData[nElements] : new ::EventMetaData[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventMetaData(void *p) {
      delete ((::EventMetaData*)p);
   }
   static void deleteArray_EventMetaData(void *p) {
      delete [] ((::EventMetaData*)p);
   }
   static void destruct_EventMetaData(void *p) {
      typedef ::EventMetaData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventMetaData

//______________________________________________________________________________
void TriggerData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TriggerData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TriggerData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TriggerData::Class(),this);
   }
}

//______________________________________________________________________________
void TriggerData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TriggerData.
      TClass *R__cl = ::TriggerData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_num", &event_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bunch_num", &bunch_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "src_id", &src_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orbit_num", &orbit_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "revision_num", &revision_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_num", &run_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_num", &trigger_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inhibited_triggers_num", &inhibited_triggers_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "input_status_bits", &input_status_bits);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TriggerData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TriggerData : new ::TriggerData;
   }
   static void *newArray_TriggerData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TriggerData[nElements] : new ::TriggerData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TriggerData(void *p) {
      delete ((::TriggerData*)p);
   }
   static void deleteArray_TriggerData(void *p) {
      delete [] ((::TriggerData*)p);
   }
   static void destruct_TriggerData(void *p) {
      typedef ::TriggerData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TriggerData

//______________________________________________________________________________
void RPRootDumpJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpJet.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> e;
      R__b >> px;
      R__b >> py;
      R__b >> pz;
      R__b >> phi;
      R__b >> phi_std;
      R__b >> rapidity;
      R__b >> pseudorapidity;
      R__b >> pt;
      R__b.CheckByteCount(R__s, R__c, RPRootDumpJet::IsA());
   } else {
      R__c = R__b.WriteVersion(RPRootDumpJet::IsA(), kTRUE);
      R__b << e;
      R__b << px;
      R__b << py;
      R__b << pz;
      R__b << phi;
      R__b << phi_std;
      R__b << rapidity;
      R__b << pseudorapidity;
      R__b << pt;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RPRootDumpJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpJet.
      TClass *R__cl = ::RPRootDumpJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e", &e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_std", &phi_std);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rapidity", &rapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pseudorapidity", &pseudorapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpJet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDumpJet : new ::RPRootDumpJet;
   }
   static void *newArray_RPRootDumpJet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDumpJet[nElements] : new ::RPRootDumpJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpJet(void *p) {
      delete ((::RPRootDumpJet*)p);
   }
   static void deleteArray_RPRootDumpJet(void *p) {
      delete [] ((::RPRootDumpJet*)p);
   }
   static void destruct_RPRootDumpJet(void *p) {
      typedef ::RPRootDumpJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RPRootDumpJet(TBuffer &buf, void *obj) {
      ((::RPRootDumpJet*)obj)->::RPRootDumpJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::RPRootDumpJet

//______________________________________________________________________________
void RPRootDumpJetInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDumpJetInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      {
         vector<RPRootDumpJet> &R__stl =  jets;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RPRootDumpJet R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> jets_no;
      R__b.CheckByteCount(R__s, R__c, RPRootDumpJetInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(RPRootDumpJetInfo::IsA(), kTRUE);
      {
         vector<RPRootDumpJet> &R__stl =  jets;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<RPRootDumpJet>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RPRootDumpJet&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << jets_no;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RPRootDumpJetInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDumpJetInfo.
      TClass *R__cl = ::RPRootDumpJetInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jets", (void*)&jets);
      R__insp.InspectMember("vector<RPRootDumpJet>", (void*)&jets, "jets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jets_no", &jets_no);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDumpJetInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDumpJetInfo : new ::RPRootDumpJetInfo;
   }
   static void *newArray_RPRootDumpJetInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDumpJetInfo[nElements] : new ::RPRootDumpJetInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDumpJetInfo(void *p) {
      delete ((::RPRootDumpJetInfo*)p);
   }
   static void deleteArray_RPRootDumpJetInfo(void *p) {
      delete [] ((::RPRootDumpJetInfo*)p);
   }
   static void destruct_RPRootDumpJetInfo(void *p) {
      typedef ::RPRootDumpJetInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RPRootDumpJetInfo(TBuffer &buf, void *obj) {
      ((::RPRootDumpJetInfo*)obj)->::RPRootDumpJetInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::RPRootDumpJetInfo

//______________________________________________________________________________
void RPRootDiffMassInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPRootDiffMassInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> px;
      R__b >> py;
      R__b >> pz;
      R__b >> pt;
      R__b >> e;
      R__b >> m;
      R__b >> min_rap;
      R__b >> max_rap;
      R__b >> rap;
      R__b >> empty;
      R__b.CheckByteCount(R__s, R__c, RPRootDiffMassInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(RPRootDiffMassInfo::IsA(), kTRUE);
      R__b << px;
      R__b << py;
      R__b << pz;
      R__b << pt;
      R__b << e;
      R__b << m;
      R__b << min_rap;
      R__b << max_rap;
      R__b << rap;
      R__b << empty;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RPRootDiffMassInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPRootDiffMassInfo.
      TClass *R__cl = ::RPRootDiffMassInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e", &e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min_rap", &min_rap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_rap", &max_rap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rap", &rap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "empty", &empty);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPRootDiffMassInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDiffMassInfo : new ::RPRootDiffMassInfo;
   }
   static void *newArray_RPRootDiffMassInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPRootDiffMassInfo[nElements] : new ::RPRootDiffMassInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPRootDiffMassInfo(void *p) {
      delete ((::RPRootDiffMassInfo*)p);
   }
   static void deleteArray_RPRootDiffMassInfo(void *p) {
      delete [] ((::RPRootDiffMassInfo*)p);
   }
   static void destruct_RPRootDiffMassInfo(void *p) {
      typedef ::RPRootDiffMassInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RPRootDiffMassInfo(TBuffer &buf, void *obj) {
      ((::RPRootDiffMassInfo*)obj)->::RPRootDiffMassInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::RPRootDiffMassInfo

//______________________________________________________________________________
void T2Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class T2Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(T2Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(T2Event::Class(),this);
   }
}

//______________________________________________________________________________
void T2Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class T2Event.
      TClass *R__cl = ::T2Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_row", (void*)&Pad_row);
      R__insp.InspectMember("vector<int>", (void*)&Pad_row, "Pad_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_col", (void*)&Pad_col);
      R__insp.InspectMember("vector<int>", (void*)&Pad_col, "Pad_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_det", (void*)&Pad_det);
      R__insp.InspectMember("vector<int>", (void*)&Pad_det, "Pad_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_row", (void*)&Strip_row);
      R__insp.InspectMember("vector<int>", (void*)&Strip_row, "Strip_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_col", (void*)&Strip_col);
      R__insp.InspectMember("vector<int>", (void*)&Strip_col, "Strip_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_det", (void*)&Strip_det);
      R__insp.InspectMember("vector<int>", (void*)&Strip_det, "Strip_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryGeneratorEta", (void*)&TrkPrimaryGeneratorEta);
      R__insp.InspectMember("vector<double>", (void*)&TrkPrimaryGeneratorEta, "TrkPrimaryGeneratorEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_XY", (void*)&TrkEta_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_XY, "TrkEta_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZmin_XY", (void*)&TrkZmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkZmin_XY, "TrkZmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkRmin_XY", (void*)&TrkRmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkRmin_XY, "TrkRmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZImpact", (void*)&TrkZImpact);
      R__insp.InspectMember("vector<double>", (void*)&TrkZImpact, "TrkZImpact.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAx", (void*)&TrkAx);
      R__insp.InspectMember("vector<double>", (void*)&TrkAx, "TrkAx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAy", (void*)&TrkAy);
      R__insp.InspectMember("vector<double>", (void*)&TrkAy, "TrkAy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkX0", (void*)&TrkX0);
      R__insp.InspectMember("vector<double>", (void*)&TrkX0, "TrkX0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkY0", (void*)&TrkY0);
      R__insp.InspectMember("vector<double>", (void*)&TrkY0, "TrkY0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi", (void*)&TrkPhi);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi, "TrkPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2XProb", (void*)&TrkChi2XProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2XProb, "TrkChi2XProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2YProb", (void*)&TrkChi2YProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2YProb, "TrkChi2YProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkClass1HitCounter", (void*)&TrkClass1HitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkClass1HitCounter, "TrkClass1HitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkHitCounter", (void*)&TrkHitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkHitCounter, "TrkHitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkThetaR_RZFit", (void*)&TrkThetaR_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkThetaR_RZFit, "TrkThetaR_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_RZFit", (void*)&TrkEta_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_RZFit, "TrkEta_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi_RZFit", (void*)&TrkPhi_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi_RZFit, "TrkPhi_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZ0_RZFit", (void*)&TrkZ0_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkZ0_RZFit, "TrkZ0_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBX_RZFit", (void*)&TrkBX_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBX_RZFit, "TrkBX_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBY_RZFit", (void*)&TrkBY_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBY_RZFit, "TrkBY_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH0", &NumPadCluH0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH1", &NumPadCluH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH2", &NumPadCluH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH3", &NumPadCluH3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH0", (void*)&TrkNumHitInH0);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH0, "TrkNumHitInH0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH1", (void*)&TrkNumHitInH1);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH1, "TrkNumHitInH1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH2", (void*)&TrkNumHitInH2);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH2, "TrkNumHitInH2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH3", (void*)&TrkNumHitInH3);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH3, "TrkNumHitInH3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta2", (void*)&TrkEta2);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta2, "TrkEta2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChiProb", (void*)&TrkChiProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChiProb, "TrkChiProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumpadonly", (void*)&Trknumpadonly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumpadonly, "Trknumpadonly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumstriponly", (void*)&Trknumstriponly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumstriponly, "Trknumstriponly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitall", (void*)&Trknumhitall);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitall, "Trknumhitall.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitacl1", (void*)&Trknumhitacl1);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitacl1, "Trknumhitacl1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbChi2R_rz", (void*)&ProbChi2R_rz);
      R__insp.InspectMember("vector<double>", (void*)&ProbChi2R_rz, "ProbChi2R_rz.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2Rreduced_rz", (void*)&Chi2Rreduced_rz);
      R__insp.InspectMember("vector<double>", (void*)&Chi2Rreduced_rz, "Chi2Rreduced_rz.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPhi", (void*)&HitPhi);
      R__insp.InspectMember("vector<double>", (void*)&HitPhi, "HitPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitR", (void*)&HitR);
      R__insp.InspectMember("vector<double>", (void*)&HitR, "HitR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitType", (void*)&HitType);
      R__insp.InspectMember("vector<double>", (void*)&HitType, "HitType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumPad", (void*)&HitNumPad);
      R__insp.InspectMember("vector<double>", (void*)&HitNumPad, "HitNumPad.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumStrip", (void*)&HitNumStrip);
      R__insp.InspectMember("vector<double>", (void*)&HitNumStrip, "HitNumStrip.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitID", (void*)&HitID);
      R__insp.InspectMember("vector<unsigned int>", (void*)&HitID, "HitID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitX", (void*)&HitX);
      R__insp.InspectMember("vector<double>", (void*)&HitX, "HitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitY", (void*)&HitY);
      R__insp.InspectMember("vector<double>", (void*)&HitY, "HitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitZ", (void*)&HitZ);
      R__insp.InspectMember("vector<double>", (void*)&HitZ, "HitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitTrkID", (void*)&HitTrkID);
      R__insp.InspectMember("vector<unsigned int>", (void*)&HitTrkID, "HitTrkID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPlane", (void*)&HitPlane);
      R__insp.InspectMember("vector<unsigned int>", (void*)&HitPlane, "HitPlane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryX", (void*)&TrkEntryX);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryX, "TrkEntryX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryY", (void*)&TrkEntryY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryY, "TrkEntryY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryZ", (void*)&TrkEntryZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryZ, "TrkEntryZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitX", (void*)&TrkExitX);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitX, "TrkExitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitY", (void*)&TrkExitY);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitY, "TrkExitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitZ", (void*)&TrkExitZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitZ, "TrkExitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkID", (void*)&TrkID);
      R__insp.InspectMember("vector<unsigned int>", (void*)&TrkID, "TrkID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_no", &ev_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_noise", (void*)&Pad_noise);
      R__insp.InspectMember("vector<double>", (void*)&Pad_noise, "Pad_noise.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var1", &its_var1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var2", &its_var2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_T2Event(void *p) {
      return  p ? new(p) ::T2Event : new ::T2Event;
   }
   static void *newArray_T2Event(Long_t nElements, void *p) {
      return p ? new(p) ::T2Event[nElements] : new ::T2Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_T2Event(void *p) {
      delete ((::T2Event*)p);
   }
   static void deleteArray_T2Event(void *p) {
      delete [] ((::T2Event*)p);
   }
   static void destruct_T2Event(void *p) {
      typedef ::T2Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::T2Event

//______________________________________________________________________________
void T1Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class T1Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(T1Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(T1Event::Class(),this);
   }
}

//______________________________________________________________________________
void T1Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class T1Event.
      TClass *R__cl = ::T1Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA", (void*)&DigiStripA);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA, "DigiStripA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB", (void*)&DigiStripB);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB, "DigiStripB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire", (void*)&DigiWire);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire, "DigiWire.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_Arm", (void*)&DigiStripA_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_Arm, "DigiStripA_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_Plane", (void*)&DigiStripA_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_Plane, "DigiStripA_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripA_CSC", (void*)&DigiStripA_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripA_CSC, "DigiStripA_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_Arm", (void*)&DigiStripB_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_Arm, "DigiStripB_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_Plane", (void*)&DigiStripB_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_Plane, "DigiStripB_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiStripB_CSC", (void*)&DigiStripB_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiStripB_CSC, "DigiStripB_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_Arm", (void*)&DigiWire_Arm);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_Arm, "DigiWire_Arm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_Plane", (void*)&DigiWire_Plane);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_Plane, "DigiWire_Plane.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DigiWire_CSC", (void*)&DigiWire_CSC);
      R__insp.InspectMember("vector<int>", (void*)&DigiWire_CSC, "DigiWire_CSC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAx", (void*)&TrkAx);
      R__insp.InspectMember("vector<double>", (void*)&TrkAx, "TrkAx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAy", (void*)&TrkAy);
      R__insp.InspectMember("vector<double>", (void*)&TrkAy, "TrkAy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkX0", (void*)&TrkX0);
      R__insp.InspectMember("vector<double>", (void*)&TrkX0, "TrkX0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkY0", (void*)&TrkY0);
      R__insp.InspectMember("vector<double>", (void*)&TrkY0, "TrkY0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi", (void*)&TrkPhi);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi, "TrkPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta", (void*)&TrkEta);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta, "TrkEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZatRmin", (void*)&TrkZatRmin);
      R__insp.InspectMember("vector<double>", (void*)&TrkZatRmin, "TrkZatRmin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkRmin", (void*)&TrkRmin);
      R__insp.InspectMember("vector<double>", (void*)&TrkRmin, "TrkRmin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2OverN", (void*)&TrkChi2OverN);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2OverN, "TrkChi2OverN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkHits", (void*)&TrkHits);
      R__insp.InspectMember("vector<unsigned int>", (void*)&TrkHits, "TrkHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitX", (void*)&RecoHitX);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitX, "RecoHitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitY", (void*)&RecoHitY);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitY, "RecoHitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RecoHitZ", (void*)&RecoHitZ);
      R__insp.InspectMember("vector<double>", (void*)&RecoHitZ, "RecoHitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_no", &ev_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var1", &its_var1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var2", &its_var2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_T1Event(void *p) {
      return  p ? new(p) ::T1Event : new ::T1Event;
   }
   static void *newArray_T1Event(Long_t nElements, void *p) {
      return p ? new(p) ::T1Event[nElements] : new ::T1Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_T1Event(void *p) {
      delete ((::T1Event*)p);
   }
   static void deleteArray_T1Event(void *p) {
      delete [] ((::T1Event*)p);
   }
   static void destruct_T1Event(void *p) {
      typedef ::T1Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::T1Event

//______________________________________________________________________________
void RPTimingDetectorsNtuplizerHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RPTimingDetectorsNtuplizerHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RPTimingDetectorsNtuplizerHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(RPTimingDetectorsNtuplizerHit::Class(),this);
   }
}

//______________________________________________________________________________
void RPTimingDetectorsNtuplizerHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RPTimingDetectorsNtuplizerHit.
      TClass *R__cl = ::RPTimingDetectorsNtuplizerHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "electrode_id", &electrode_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position", &position);
      R__insp.InspectMember(position, "position.");
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RPTimingDetectorsNtuplizerHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPTimingDetectorsNtuplizerHit : new ::RPTimingDetectorsNtuplizerHit;
   }
   static void *newArray_RPTimingDetectorsNtuplizerHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RPTimingDetectorsNtuplizerHit[nElements] : new ::RPTimingDetectorsNtuplizerHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RPTimingDetectorsNtuplizerHit(void *p) {
      delete ((::RPTimingDetectorsNtuplizerHit*)p);
   }
   static void deleteArray_RPTimingDetectorsNtuplizerHit(void *p) {
      delete [] ((::RPTimingDetectorsNtuplizerHit*)p);
   }
   static void destruct_RPTimingDetectorsNtuplizerHit(void *p) {
      typedef ::RPTimingDetectorsNtuplizerHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RPTimingDetectorsNtuplizerHit

//______________________________________________________________________________
void Point::Streamer(TBuffer &R__b)
{
   // Stream an object of class Point.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Point::Class(),this);
   } else {
      R__b.WriteClassBuffer(Point::Class(),this);
   }
}

//______________________________________________________________________________
void Point::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Point.
      TClass *R__cl = ::Point::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Point(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Point : new ::Point;
   }
   static void *newArray_Point(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Point[nElements] : new ::Point[nElements];
   }
   // Wrapper around operator delete
   static void delete_Point(void *p) {
      delete ((::Point*)p);
   }
   static void deleteArray_Point(void *p) {
      delete [] ((::Point*)p);
   }
   static void destruct_Point(void *p) {
      typedef ::Point current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Point

namespace ROOT {
   void vectorlEPointgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPointgR_Dictionary();
   static void *new_vectorlEPointgR(void *p = 0);
   static void *newArray_vectorlEPointgR(Long_t size, void *p);
   static void delete_vectorlEPointgR(void *p);
   static void deleteArray_vectorlEPointgR(void *p);
   static void destruct_vectorlEPointgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Point>*)
   {
      vector<Point> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Point>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Point>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<Point>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPointgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Point>) );
      instance.SetNew(&new_vectorlEPointgR);
      instance.SetNewArray(&newArray_vectorlEPointgR);
      instance.SetDelete(&delete_vectorlEPointgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPointgR);
      instance.SetDestructor(&destruct_vectorlEPointgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Point> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Point>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPointgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Point>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPointgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Point> : new vector<Point>;
   }
   static void *newArray_vectorlEPointgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Point>[nElements] : new vector<Point>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPointgR(void *p) {
      delete ((vector<Point>*)p);
   }
   static void deleteArray_vectorlEPointgR(void *p) {
      delete [] ((vector<Point>*)p);
   }
   static void destruct_vectorlEPointgR(void *p) {
      typedef vector<Point> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Point>

namespace ROOT {
   void vectorlERPRootDumpJetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERPRootDumpJetgR_Dictionary();
   static void *new_vectorlERPRootDumpJetgR(void *p = 0);
   static void *newArray_vectorlERPRootDumpJetgR(Long_t size, void *p);
   static void delete_vectorlERPRootDumpJetgR(void *p);
   static void deleteArray_vectorlERPRootDumpJetgR(void *p);
   static void destruct_vectorlERPRootDumpJetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RPRootDumpJet>*)
   {
      vector<RPRootDumpJet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RPRootDumpJet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RPRootDumpJet>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RPRootDumpJet>), DefineBehavior(ptr, ptr),
                  0, &vectorlERPRootDumpJetgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RPRootDumpJet>) );
      instance.SetNew(&new_vectorlERPRootDumpJetgR);
      instance.SetNewArray(&newArray_vectorlERPRootDumpJetgR);
      instance.SetDelete(&delete_vectorlERPRootDumpJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlERPRootDumpJetgR);
      instance.SetDestructor(&destruct_vectorlERPRootDumpJetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RPRootDumpJet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RPRootDumpJet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERPRootDumpJetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RPRootDumpJet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERPRootDumpJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpJet> : new vector<RPRootDumpJet>;
   }
   static void *newArray_vectorlERPRootDumpJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPRootDumpJet>[nElements] : new vector<RPRootDumpJet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERPRootDumpJetgR(void *p) {
      delete ((vector<RPRootDumpJet>*)p);
   }
   static void deleteArray_vectorlERPRootDumpJetgR(void *p) {
      delete [] ((vector<RPRootDumpJet>*)p);
   }
   static void destruct_vectorlERPRootDumpJetgR(void *p) {
      typedef vector<RPRootDumpJet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RPRootDumpJet>

namespace ROOT {
   void vectorlERPTimingDetectorsNtuplizerHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERPTimingDetectorsNtuplizerHitgR_Dictionary();
   static void *new_vectorlERPTimingDetectorsNtuplizerHitgR(void *p = 0);
   static void *newArray_vectorlERPTimingDetectorsNtuplizerHitgR(Long_t size, void *p);
   static void delete_vectorlERPTimingDetectorsNtuplizerHitgR(void *p);
   static void deleteArray_vectorlERPTimingDetectorsNtuplizerHitgR(void *p);
   static void destruct_vectorlERPTimingDetectorsNtuplizerHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RPTimingDetectorsNtuplizerHit>*)
   {
      vector<RPTimingDetectorsNtuplizerHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RPTimingDetectorsNtuplizerHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RPTimingDetectorsNtuplizerHit>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RPTimingDetectorsNtuplizerHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlERPTimingDetectorsNtuplizerHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<RPTimingDetectorsNtuplizerHit>) );
      instance.SetNew(&new_vectorlERPTimingDetectorsNtuplizerHitgR);
      instance.SetNewArray(&newArray_vectorlERPTimingDetectorsNtuplizerHitgR);
      instance.SetDelete(&delete_vectorlERPTimingDetectorsNtuplizerHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlERPTimingDetectorsNtuplizerHitgR);
      instance.SetDestructor(&destruct_vectorlERPTimingDetectorsNtuplizerHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RPTimingDetectorsNtuplizerHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RPTimingDetectorsNtuplizerHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERPTimingDetectorsNtuplizerHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RPTimingDetectorsNtuplizerHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERPTimingDetectorsNtuplizerHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPTimingDetectorsNtuplizerHit> : new vector<RPTimingDetectorsNtuplizerHit>;
   }
   static void *newArray_vectorlERPTimingDetectorsNtuplizerHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RPTimingDetectorsNtuplizerHit>[nElements] : new vector<RPTimingDetectorsNtuplizerHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERPTimingDetectorsNtuplizerHitgR(void *p) {
      delete ((vector<RPTimingDetectorsNtuplizerHit>*)p);
   }
   static void deleteArray_vectorlERPTimingDetectorsNtuplizerHitgR(void *p) {
      delete [] ((vector<RPTimingDetectorsNtuplizerHit>*)p);
   }
   static void destruct_vectorlERPTimingDetectorsNtuplizerHitgR(void *p) {
      typedef vector<RPTimingDetectorsNtuplizerHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RPTimingDetectorsNtuplizerHit>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* tmp/slc6_amd64_gcc481/src/TotemAnalysis/TotemNtuplizer/src/TotemAnalysisTotemNtuplizer/LinkDef.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLinkDef();

extern "C" void G__set_cpp_environmentLinkDef() {
  G__cpp_reset_tagtableLinkDef();
}
#include <new>
extern "C" int G__cpp_dllrevLinkDef() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EventMetaData */
static int G__LinkDef_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventMetaData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventMetaData[n];
     } else {
       p = new((void*) gvp) EventMetaData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventMetaData;
     } else {
       p = new((void*) gvp) EventMetaData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_EventMetaData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventMetaData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventMetaData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventMetaData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventMetaData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventMetaData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventMetaData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventMetaData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventMetaData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventMetaData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventMetaData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventMetaData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventMetaData(*(EventMetaData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_EventMetaData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventMetaData G__TEventMetaData;
static int G__LinkDef_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventMetaData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventMetaData*) (soff+(sizeof(EventMetaData)*i)))->~G__TEventMetaData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventMetaData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventMetaData*) (soff))->~G__TEventMetaData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventMetaData* dest = (EventMetaData*) G__getstructoffset();
   *dest = *(EventMetaData*) libp->para[0].ref;
   const EventMetaData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TriggerData */
static int G__LinkDef_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TriggerData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TriggerData[n];
     } else {
       p = new((void*) gvp) TriggerData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TriggerData;
     } else {
       p = new((void*) gvp) TriggerData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_TriggerData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TriggerData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TriggerData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TriggerData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TriggerData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TriggerData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TriggerData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TriggerData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TriggerData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TriggerData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TriggerData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TriggerData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TriggerData(*(TriggerData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_TriggerData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TriggerData G__TTriggerData;
static int G__LinkDef_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TriggerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TriggerData*) (soff+(sizeof(TriggerData)*i)))->~G__TTriggerData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TriggerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TriggerData*) (soff))->~G__TTriggerData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TriggerData* dest = (TriggerData*) G__getstructoffset();
   *dest = *(TriggerData*) libp->para[0].ref;
   const TriggerData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpJet */
static int G__LinkDef_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RPRootDumpJet(*(fastjet::PseudoJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RPRootDumpJet(*(fastjet::PseudoJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpJet[n];
     } else {
       p = new((void*) gvp) RPRootDumpJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpJet;
     } else {
       p = new((void*) gvp) RPRootDumpJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RPRootDumpJet*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJet*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJet*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_593_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_593_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpJet(*(RPRootDumpJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpJet G__TRPRootDumpJet;
static int G__LinkDef_593_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpJet*) (soff+(sizeof(RPRootDumpJet)*i)))->~G__TRPRootDumpJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpJet*) (soff))->~G__TRPRootDumpJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_593_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpJet* dest = (RPRootDumpJet*) G__getstructoffset();
   *dest = *(RPRootDumpJet*) libp->para[0].ref;
   const RPRootDumpJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDumpJetInfo */
static int G__LinkDef_594_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpJetInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpJetInfo[n];
     } else {
       p = new((void*) gvp) RPRootDumpJetInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDumpJetInfo;
     } else {
       p = new((void*) gvp) RPRootDumpJetInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJetInfo*) G__getstructoffset())->AddJets(*(vector<fastjet::PseudoJet>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDumpJetInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJetInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDumpJetInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDumpJetInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RPRootDumpJetInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJetInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJetInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDumpJetInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJetInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpJetInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDumpJetInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_594_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDumpJetInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_594_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDumpJetInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDumpJetInfo(*(RPRootDumpJetInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDumpJetInfo G__TRPRootDumpJetInfo;
static int G__LinkDef_594_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDumpJetInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDumpJetInfo*) (soff+(sizeof(RPRootDumpJetInfo)*i)))->~G__TRPRootDumpJetInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDumpJetInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDumpJetInfo*) (soff))->~G__TRPRootDumpJetInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_594_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDumpJetInfo* dest = (RPRootDumpJetInfo*) G__getstructoffset();
   *dest = *(RPRootDumpJetInfo*) libp->para[0].ref;
   const RPRootDumpJetInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RPRootDumpJet,allocator<RPRootDumpJet> > */
static int G__LinkDef_596_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reference obj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->at((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_reference obj = ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->at((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator* pobj;
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator xobj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->begin();
         pobj = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator* pobj;
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator xobj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->end();
         pobj = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator* pobj;
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator xobj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator* pobj;
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator xobj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->rend();
         pobj = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->resize((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->resize((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]), *((RPRootDumpJet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reference obj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->operator[]((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_reference obj = ((const vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->operator[]((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpJet,allocator<RPRootDumpJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >[n];
     } else {
       p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >;
     } else {
       p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpJet,allocator<RPRootDumpJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]), *(RPRootDumpJet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]), *(RPRootDumpJet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpJet,allocator<RPRootDumpJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >(*(vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >(*(vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPRootDumpJet,allocator<RPRootDumpJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[0])), *((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RPRootDumpJet,allocator<RPRootDumpJet> >(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[0])), *((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPRootDumpJet,allocator<RPRootDumpJet> >& obj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->operator=(*(vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->reserve((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPRootDumpJet& obj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPRootDumpJet& obj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->push_back(*(RPRootDumpJet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->swap(*(vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator* pobj;
         vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator xobj = ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->insert(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[0])), *(RPRootDumpJet*) libp->para[1].ref);
         pobj = new vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->insert(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[0])), *((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->insert(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[0])), (vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type) G__int(libp->para[1])
, *(RPRootDumpJet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->erase(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->erase(*((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[0])), *((vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_596_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RPRootDumpJet,allocator<RPRootDumpJet> > G__TvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR;
static int G__LinkDef_596_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) (soff+(sizeof(vector<RPRootDumpJet,allocator<RPRootDumpJet> >)*i)))->~G__TvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RPRootDumpJet,allocator<RPRootDumpJet> >*) (soff))->~G__TvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPRootDiffMassInfo */
static int G__LinkDef_599_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDiffMassInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDiffMassInfo[n];
     } else {
       p = new((void*) gvp) RPRootDiffMassInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPRootDiffMassInfo;
     } else {
       p = new((void*) gvp) RPRootDiffMassInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDiffMassInfo*) G__getstructoffset())->SetVariables(*(CentralMassInfo*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPRootDiffMassInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDiffMassInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPRootDiffMassInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPRootDiffMassInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RPRootDiffMassInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDiffMassInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDiffMassInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPRootDiffMassInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDiffMassInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDiffMassInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPRootDiffMassInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_599_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPRootDiffMassInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_599_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPRootDiffMassInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPRootDiffMassInfo(*(RPRootDiffMassInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPRootDiffMassInfo G__TRPRootDiffMassInfo;
static int G__LinkDef_599_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPRootDiffMassInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPRootDiffMassInfo*) (soff+(sizeof(RPRootDiffMassInfo)*i)))->~G__TRPRootDiffMassInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPRootDiffMassInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPRootDiffMassInfo*) (soff))->~G__TRPRootDiffMassInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_599_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPRootDiffMassInfo* dest = (RPRootDiffMassInfo*) G__getstructoffset();
   *dest = *(RPRootDiffMassInfo*) libp->para[0].ref;
   const RPRootDiffMassInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* T1Event */
static int G__LinkDef_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T1Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T1Event[n];
     } else {
       p = new((void*) gvp) T1Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T1Event;
     } else {
       p = new((void*) gvp) T1Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T1Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) T1Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) T1Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      T1Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((T1Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T1Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T1Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T1Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   T1Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new T1Event(*(T1Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T1Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef T1Event G__TT1Event;
static int G__LinkDef_600_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (T1Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((T1Event*) (soff+(sizeof(T1Event)*i)))->~G__TT1Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (T1Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((T1Event*) (soff))->~G__TT1Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_600_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T1Event* dest = (T1Event*) G__getstructoffset();
   *dest = *(T1Event*) libp->para[0].ref;
   const T1Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* T2Event */
static int G__LinkDef_601_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2Event[n];
     } else {
       p = new((void*) gvp) T2Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2Event;
     } else {
       p = new((void*) gvp) T2Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) T2Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) T2Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      T2Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((T2Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_601_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_601_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   T2Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new T2Event(*(T2Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T2Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef T2Event G__TT2Event;
static int G__LinkDef_601_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (T2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((T2Event*) (soff+(sizeof(T2Event)*i)))->~G__TT2Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (T2Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((T2Event*) (soff))->~G__TT2Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_601_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2Event* dest = (T2Event*) G__getstructoffset();
   *dest = *(T2Event*) libp->para[0].ref;
   const T2Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Point */
static int G__LinkDef_602_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Point* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Point[n];
     } else {
       p = new((void*) gvp) Point[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Point;
     } else {
       p = new((void*) gvp) Point;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_Point));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Point* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Point((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) Point((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_Point));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Point::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Point::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Point::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Point::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Point*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Point*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Point*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Point*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Point::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Point::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Point::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_602_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Point::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_602_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Point* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Point(*(Point*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_Point));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Point G__TPoint;
static int G__LinkDef_602_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Point*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Point*) (soff+(sizeof(Point)*i)))->~G__TPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Point*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Point*) (soff))->~G__TPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_602_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Point* dest = (Point*) G__getstructoffset();
   *dest = *(Point*) libp->para[0].ref;
   const Point& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RPTimingDetectorsNtuplizerHit */
static int G__LinkDef_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPTimingDetectorsNtuplizerHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPTimingDetectorsNtuplizerHit[n];
     } else {
       p = new((void*) gvp) RPTimingDetectorsNtuplizerHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RPTimingDetectorsNtuplizerHit;
     } else {
       p = new((void*) gvp) RPTimingDetectorsNtuplizerHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPTimingDetectorsNtuplizerHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RPTimingDetectorsNtuplizerHit((unsigned short) G__int(libp->para[0]), *((Point*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) RPTimingDetectorsNtuplizerHit((unsigned short) G__int(libp->para[0]), *((Point*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RPTimingDetectorsNtuplizerHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPTimingDetectorsNtuplizerHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RPTimingDetectorsNtuplizerHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RPTimingDetectorsNtuplizerHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RPTimingDetectorsNtuplizerHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPTimingDetectorsNtuplizerHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPTimingDetectorsNtuplizerHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RPTimingDetectorsNtuplizerHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPTimingDetectorsNtuplizerHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPTimingDetectorsNtuplizerHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RPTimingDetectorsNtuplizerHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_603_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RPTimingDetectorsNtuplizerHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RPTimingDetectorsNtuplizerHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RPTimingDetectorsNtuplizerHit(*(RPTimingDetectorsNtuplizerHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RPTimingDetectorsNtuplizerHit G__TRPTimingDetectorsNtuplizerHit;
static int G__LinkDef_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RPTimingDetectorsNtuplizerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RPTimingDetectorsNtuplizerHit*) (soff+(sizeof(RPTimingDetectorsNtuplizerHit)*i)))->~G__TRPTimingDetectorsNtuplizerHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RPTimingDetectorsNtuplizerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RPTimingDetectorsNtuplizerHit*) (soff))->~G__TRPTimingDetectorsNtuplizerHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_603_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RPTimingDetectorsNtuplizerHit* dest = (RPTimingDetectorsNtuplizerHit*) G__getstructoffset();
   *dest = *(RPTimingDetectorsNtuplizerHit*) libp->para[0].ref;
   const RPTimingDetectorsNtuplizerHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > */
static int G__LinkDef_605_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reference obj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->at((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_reference obj = ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->at((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator* pobj;
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator xobj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->begin();
         pobj = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator* pobj;
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator xobj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->end();
         pobj = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator* pobj;
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator xobj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator* pobj;
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator xobj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->rend();
         pobj = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->resize((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->resize((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]), *((RPTimingDetectorsNtuplizerHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reference obj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->operator[]((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_reference obj = ((const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->operator[]((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >[n];
     } else {
       p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >;
     } else {
       p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]), *(RPTimingDetectorsNtuplizerHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]), *(RPTimingDetectorsNtuplizerHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >(*(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >(*(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[0])), *((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[0])), *((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >& obj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->operator=(*(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->reserve((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPTimingDetectorsNtuplizerHit& obj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RPTimingDetectorsNtuplizerHit& obj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->push_back(*(RPTimingDetectorsNtuplizerHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->swap(*(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator* pobj;
         vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator xobj = ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->insert(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[0])), *(RPTimingDetectorsNtuplizerHit*) libp->para[1].ref);
         pobj = new vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->insert(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[0])), *((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->insert(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[0])), (vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type) G__int(libp->para[1])
, *(RPTimingDetectorsNtuplizerHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->erase(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->erase(*((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[0])), *((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_605_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > G__TvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR;
static int G__LinkDef_605_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) (soff+(sizeof(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >)*i)))->~G__TvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*) (soff))->~G__TvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Point,allocator<Point> > */
static int G__LinkDef_609_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Point,allocator<Point> >::reference obj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->at((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::const_reference obj = ((const vector<Point,allocator<Point> >*) G__getstructoffset())->at((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::iterator* pobj;
         vector<Point,allocator<Point> >::iterator xobj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->begin();
         pobj = new vector<Point,allocator<Point> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::iterator* pobj;
         vector<Point,allocator<Point> >::iterator xobj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->end();
         pobj = new vector<Point,allocator<Point> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::reverse_iterator* pobj;
         vector<Point,allocator<Point> >::reverse_iterator xobj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Point,allocator<Point> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::reverse_iterator* pobj;
         vector<Point,allocator<Point> >::reverse_iterator xobj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->rend();
         pobj = new vector<Point,allocator<Point> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Point,allocator<Point> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Point,allocator<Point> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->resize((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->resize((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]), *((Point*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Point,allocator<Point> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Point,allocator<Point> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Point,allocator<Point> >::reference obj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->operator[]((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::const_reference obj = ((const vector<Point,allocator<Point> >*) G__getstructoffset())->operator[]((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Point,allocator<Point> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Point,allocator<Point> >[n];
     } else {
       p = new((void*) gvp) vector<Point,allocator<Point> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Point,allocator<Point> >;
     } else {
       p = new((void*) gvp) vector<Point,allocator<Point> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Point,allocator<Point> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Point,allocator<Point> >((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]), *(Point*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Point,allocator<Point> >((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]), *(Point*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Point,allocator<Point> >((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Point,allocator<Point> >((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Point,allocator<Point> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Point,allocator<Point> >(*(vector<Point,allocator<Point> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Point,allocator<Point> >(*(vector<Point,allocator<Point> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Point,allocator<Point> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Point,allocator<Point> >(*((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[0])), *((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Point,allocator<Point> >(*((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[0])), *((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Point,allocator<Point> >& obj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->operator=(*(vector<Point,allocator<Point> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->reserve((vector<Point,allocator<Point> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Point& obj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Point& obj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->push_back(*(Point*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->swap(*(vector<Point,allocator<Point> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Point,allocator<Point> >::iterator* pobj;
         vector<Point,allocator<Point> >::iterator xobj = ((vector<Point,allocator<Point> >*) G__getstructoffset())->insert(*((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[0])), *(Point*) libp->para[1].ref);
         pobj = new vector<Point,allocator<Point> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->insert(*((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[0])), *((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Point,allocator<Point> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->insert(*((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[0])), (vector<Point,allocator<Point> >::size_type) G__int(libp->para[1])
, *(Point*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->erase(*((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->erase(*((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[0])), *((vector<Point,allocator<Point> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_609_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Point,allocator<Point> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Point,allocator<Point> > G__TvectorlEPointcOallocatorlEPointgRsPgR;
static int G__LinkDef_609_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Point,allocator<Point> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Point,allocator<Point> >*) (soff+(sizeof(vector<Point,allocator<Point> >)*i)))->~G__TvectorlEPointcOallocatorlEPointgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Point,allocator<Point> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Point,allocator<Point> >*) (soff))->~G__TvectorlEPointcOallocatorlEPointgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EventMetaData */

/* TriggerData */

/* RPRootDumpJet */

/* RPRootDumpJetInfo */

/* vector<RPRootDumpJet,allocator<RPRootDumpJet> > */

/* RPRootDiffMassInfo */

/* T1Event */

/* T2Event */

/* Point */

/* RPTimingDetectorsNtuplizerHit */

/* vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > */

/* vector<Point,allocator<Point> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLinkDef {
 public:
  G__Sizep2memfuncLinkDef(): p(&G__Sizep2memfuncLinkDef::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLinkDef::*p)();
};

size_t G__get_sizep2memfuncLinkDef()
{
  G__Sizep2memfuncLinkDef a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLinkDef() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinkDefLN_T1Event))) {
     T1Event *G__Lderived;
     G__Lderived=(T1Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinkDefLN_T1Event),G__get_linked_tagnum(&G__LinkDefLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinkDefLN_T2Event))) {
     T2Event *G__Lderived;
     G__Lderived=(T2Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinkDefLN_T2Event),G__get_linked_tagnum(&G__LinkDefLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLinkDef() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EtaPhi>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fastjet::EtaPhi>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PseudoJet>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fastjet::PseudoJet>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,unsigned int>",117,G__get_linked_tagnum(&G__LinkDefLN_pairlEstringcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,unsigned int>",117,G__get_linked_tagnum(&G__LinkDefLN_pairlEstringcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Summary>",117,G__get_linked_tagnum(&G__LinkDefLN_listlEpairlEstringcOunsignedsPintgRcOallocatorlEpairlEstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<string,unsigned int> >",117,G__get_linked_tagnum(&G__LinkDefLN_listlEpairlEstringcOunsignedsPintgRcOallocatorlEpairlEstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const PseudoJet*>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const fastjet::PseudoJet*>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<history_element>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fastjet::ClusterSequence::history_element>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<const history_element*>",117,G__get_linked_tagnum(&G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<const fastjet::ClusterSequence::history_element*>",117,G__get_linked_tagnum(&G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<const fastjet::ClusterSequence::history_element*,less<const fastjet::ClusterSequence::history_element*> >",117,G__get_linked_tagnum(&G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<double,TwoVertices>",117,G__get_linked_tagnum(&G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<double,pair<int,int> >",117,G__get_linked_tagnum(&G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<double,pair<int,int>,less<double> >",117,G__get_linked_tagnum(&G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Tile>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fastjet::ClusterSequence::Tile>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ClusterSequence::history_element>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RPRootDumpJet>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet),1,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet),257,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RPTimingDetectorsNtuplizerHit>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),1,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),257,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Point>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LinkDefLN_Point),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LinkDefLN_Point),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LinkDefLN_Point),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LinkDefLN_Point),1,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LinkDefLN_Point),257,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EventMetaData */
static void G__setup_memvarEventMetaData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_EventMetaData));
   { EventMetaData *p; p=(EventMetaData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),107,0,0,-1,-1,-1,1,"run_no=",0,"/< run number in form [run number]*1E4 + [raw-data file index]");
   G__memvar_setup((void*)((long)(&p->event_no)-(long)(p)),107,0,0,-1,-1,-1,1,"event_no=",0,"/< event number assigned by CMSSW (RawDataSource), counts from 1");
   G__memvar_setup((void*)((long)(&p->daq_event_number)-(long)(p)),107,0,0,-1,-1,-1,1,"daq_event_number=",0,"/< event number assigned by DAQ");
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,"/< timestamp of the event (UNIX timestamp), 1s resolution");
   G__memvar_setup((void*)((long)(&p->optoRx_Id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_Id=",0,"/< ID of a given OptoRx (the index of the array)");
   G__memvar_setup((void*)((long)(&p->optoRx_BX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_BX=",0,"/< bunch-crossing number reported by a given OptoRx");
   G__memvar_setup((void*)((long)(&p->optoRx_LV1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"optoRx_LV1=",0,"/< LV1 as reported by a given OptoRx");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TriggerData */
static void G__setup_memvarTriggerData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_TriggerData));
   { TriggerData *p; p=(TriggerData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),98,0,0,-1,-1,-1,1,"type=",0,"/<");
   G__memvar_setup((void*)((long)(&p->event_num)-(long)(p)),104,0,0,-1,-1,-1,1,"event_num=",0,"/< incremental counter of triggers accepted by DAQ (thus event counter)");
   G__memvar_setup((void*)((long)(&p->bunch_num)-(long)(p)),104,0,0,-1,-1,-1,1,"bunch_num=",0,"/< the number of bunch(-pair) collided in this event");
   G__memvar_setup((void*)((long)(&p->src_id)-(long)(p)),104,0,0,-1,-1,-1,1,"src_id=",0,"/<");
   G__memvar_setup((void*)((long)(&p->orbit_num)-(long)(p)),104,0,0,-1,-1,-1,1,"orbit_num=",0,"/<");
   G__memvar_setup((void*)((long)(&p->revision_num)-(long)(p)),98,0,0,-1,-1,-1,1,"revision_num=",0,"/<");
   G__memvar_setup((void*)((long)(&p->run_num)-(long)(p)),104,0,0,-1,-1,-1,1,"run_num=",0,"/< the run number (without the raw-file index extension)");
   G__memvar_setup((void*)((long)(&p->trigger_num)-(long)(p)),104,0,0,-1,-1,-1,1,"trigger_num=",0,"/< incremental trigger counter");
   G__memvar_setup((void*)((long)(&p->inhibited_triggers_num)-(long)(p)),104,0,0,-1,-1,-1,1,"inhibited_triggers_num=",0,"/< incremental counter of triggers rejected by DAQ");
   G__memvar_setup((void*)((long)(&p->input_status_bits)-(long)(p)),104,0,0,-1,-1,-1,1,"input_status_bits=",0,"/< result of the trigger logic (each bit corresponds to one entry in the trigger menu)");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpJet */
static void G__setup_memvarRPRootDumpJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet));
   { RPRootDumpJet *p; p=(RPRootDumpJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),100,0,0,-1,-1,-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,-1,-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,-1,-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,-1,-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi_std)-(long)(p)),100,0,0,-1,-1,-1,1,"phi_std=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rapidity)-(long)(p)),100,0,0,-1,-1,-1,1,"rapidity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pseudorapidity)-(long)(p)),100,0,0,-1,-1,-1,1,"pseudorapidity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPRootDumpJetInfo */
static void G__setup_memvarRPRootDumpJetInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo));
   { RPRootDumpJetInfo *p; p=(RPRootDumpJetInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->jets)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR),G__defined_typename("vector<RPRootDumpJet>"),-1,1,"jets=",0,"/< array of MC jets");
   G__memvar_setup((void*)((long)(&p->jets_no)-(long)(p)),105,0,0,-1,-1,-1,1,"jets_no=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RPRootDumpJet,allocator<RPRootDumpJet> > */
static void G__setup_memvarvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   { vector<RPRootDumpJet,allocator<RPRootDumpJet> > *p; p=(vector<RPRootDumpJet,allocator<RPRootDumpJet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RPRootDiffMassInfo */
static void G__setup_memvarRPRootDiffMassInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo));
   { RPRootDiffMassInfo *p; p=(RPRootDiffMassInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,-1,-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,-1,-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,-1,-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),100,0,0,-1,-1,-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->min_rap)-(long)(p)),100,0,0,-1,-1,-1,1,"min_rap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max_rap)-(long)(p)),100,0,0,-1,-1,-1,1,"max_rap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rap)-(long)(p)),100,0,0,-1,-1,-1,1,"rap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->empty)-(long)(p)),103,0,0,-1,-1,-1,1,"empty=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* T1Event */
static void G__setup_memvarT1Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_T1Event));
   { T1Event *p; p=(T1Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->DigiStripA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripA_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripA_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiStripB_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiStripB_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_Arm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_Arm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_Plane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_Plane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DigiWire_CSC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DigiWire_CSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkX0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkY0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkY0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZatRmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZatRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkRmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkChi2OverN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2OverN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"TrkHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RecoHitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"RecoHitZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),108,0,0,-1,-1,-1,1,"run_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_no)-(long)(p)),108,0,0,-1,-1,-1,1,"ev_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"its_var1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"its_var2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* T2Event */
static void G__setup_memvarT2Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_T2Event));
   { T2Event *p; p=(T2Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Pad_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_row=",0,"strip row   ");
   G__memvar_setup((void*)((long)(&p->Pad_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_col=",0,"strip column   ");
   G__memvar_setup((void*)((long)(&p->Pad_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_det=",0,"symbolic id of the detector containind the pad");
   G__memvar_setup((void*)((long)(&p->Strip_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_row=",0,"strip row");
   G__memvar_setup((void*)((long)(&p->Strip_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_col=",0,"strip column");
   G__memvar_setup((void*)((long)(&p->Strip_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_det=",0,"symbolic id of the detector containind the strip");
   G__memvar_setup((void*)((long)(&p->TrkPrimaryGeneratorEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPrimaryGeneratorEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEta_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkRmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkRmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZImpact)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZImpact=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAx=",0,"slope of the track projection in the XZ plane");
   G__memvar_setup((void*)((long)(&p->TrkAy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAy=",0,"slope of the track projection in the YZ plane");
   G__memvar_setup((void*)((long)(&p->TrkX0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkX0=",0,"X at Z=0 for the XZ projected track  ");
   G__memvar_setup((void*)((long)(&p->TrkY0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkY0=",0,"Y at Z=0 for the XZ projected track");
   G__memvar_setup((void*)((long)(&p->TrkPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi=",0,"Trk Phi (XY fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2XProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2XProb=",0,"Chi2-X probability (goodness of the XZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2YProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2YProb=",0,"Chi2-Y probability (goodness of the YZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkClass1HitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkClass1HitCounter=",0,"Number of class1 Hit in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkHitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkHitCounter=",0,"Number of class1 + cluster Pad hits in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkThetaR_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkThetaR_RZFit=",0,"Trk Polar angle obtained tracking in the Rz plane");
   G__memvar_setup((void*)((long)(&p->TrkEta_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_RZFit=",0,"Trk Eta obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkPhi_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi_RZFit=",0,"Trk Phi obtained with a constant fit.");
   G__memvar_setup((void*)((long)(&p->TrkZ0_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZ0_RZFit=",0,"Crossing Point between Trk and Z Axis obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBX_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBX_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBY_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBY_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->NumPadCluH0)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH0=",0,"Num pad cluster in the whole H0");
   G__memvar_setup((void*)((long)(&p->NumPadCluH1)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumPadCluH2)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumPadCluH3)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEta2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkChiProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChiProb=",0,"Make sense only with T2TrackProducer3");
   G__memvar_setup((void*)((long)(&p->Trknumpadonly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumpadonly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumstriponly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumstriponly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitall)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitacl1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitacl1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProbChi2R_rz)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ProbChi2R_rz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2Rreduced_rz)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Chi2Rreduced_rz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitPhi=",0,"Phi position of all the Hits (deg)");
   G__memvar_setup((void*)((long)(&p->HitR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitR=",0,"R position of all the Hits (mm)");
   G__memvar_setup((void*)((long)(&p->HitType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitType=",0,"0-> only pad; 1-> only strip 2->Class 1 Hit (superimposition Pad/Strip)");
   G__memvar_setup((void*)((long)(&p->HitNumPad)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumPad=",0,"Cluster Pad Size ");
   G__memvar_setup((void*)((long)(&p->HitNumStrip)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumStrip=",0,"Cluster Strip Size");
   G__memvar_setup((void*)((long)(&p->HitID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"HitID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitX=",0,"Phi position of all the Hits (deg)");
   G__memvar_setup((void*)((long)(&p->HitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitY=",0,"R position of all the Hits (mm)");
   G__memvar_setup((void*)((long)(&p->HitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitTrkID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"HitTrkID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPlane)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"HitPlane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEntryX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryX=",0,"Trk Entry point X");
   G__memvar_setup((void*)((long)(&p->TrkEntryY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryY=",0,"Trk Entry point Y");
   G__memvar_setup((void*)((long)(&p->TrkEntryZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryZ=",0,"Trk Entry point Z");
   G__memvar_setup((void*)((long)(&p->TrkExitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitX=",0,"Trk Exit point X");
   G__memvar_setup((void*)((long)(&p->TrkExitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitY=",0,"Trk Exit point Y");
   G__memvar_setup((void*)((long)(&p->TrkExitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitZ=",0,"Trk Exit point Z");
   G__memvar_setup((void*)((long)(&p->TrkID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"TrkID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),108,0,0,-1,-1,-1,1,"run_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_no)-(long)(p)),108,0,0,-1,-1,-1,1,"ev_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pad_noise)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Pad_noise=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"its_var1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"its_var2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Point */
static void G__setup_memvarPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_Point));
   { Point *p; p=(Point*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,-1,-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RPTimingDetectorsNtuplizerHit */
static void G__setup_memvarRPTimingDetectorsNtuplizerHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit));
   { RPTimingDetectorsNtuplizerHit *p; p=(RPTimingDetectorsNtuplizerHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electrode_id)-(long)(p)),114,0,0,-1,-1,-1,1,"electrode_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_Point),-1,-1,1,"position=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > */
static void G__setup_memvarvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   { vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > *p; p=(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<Point,allocator<Point> > */
static void G__setup_memvarvectorlEPointcOallocatorlEPointgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   { vector<Point,allocator<Point> > *p; p=(vector<Point,allocator<Point> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLinkDef() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEventMetaData(void) {
   /* EventMetaData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_EventMetaData));
   G__memfunc_setup("EventMetaData",1283,G__LinkDef_168_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_EventMetaData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_168_0_2, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventMetaData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventMetaData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventMetaData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_168_0_6, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_168_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_168_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventMetaData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventMetaData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventMetaData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventMetaData", 1283, G__LinkDef_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_EventMetaData), -1, 0, 1, 1, 1, 0, "u 'EventMetaData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventMetaData", 1409, G__LinkDef_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_EventMetaData), -1, 1, 1, 1, 1, 0, "u 'EventMetaData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTriggerData(void) {
   /* TriggerData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_TriggerData));
   G__memfunc_setup("TriggerData",1102,G__LinkDef_169_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_TriggerData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_169_0_2, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TriggerData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_169_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_169_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TriggerData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_169_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TriggerData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_169_0_6, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_169_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_169_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_169_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_169_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TriggerData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_169_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TriggerData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_169_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TriggerData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TriggerData", 1102, G__LinkDef_169_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_TriggerData), -1, 0, 1, 1, 1, 0, "u 'TriggerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TriggerData", 1228, G__LinkDef_169_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_169_0_16, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_TriggerData), -1, 1, 1, 1, 1, 0, "u 'TriggerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpJet(void) {
   /* RPRootDumpJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet));
   G__memfunc_setup("RPRootDumpJet",1279,G__LinkDef_593_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 0, 1, 1, 1, 0, "u 'fastjet::PseudoJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RPRootDumpJet",1279,G__LinkDef_593_0_2, 105, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_593_0_3, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_593_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_593_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_593_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_593_0_7, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_593_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_593_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_593_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_593_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_593_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_593_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_593_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpJet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpJet", 1279, G__LinkDef_593_0_15, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpJet", 1405, G__LinkDef_593_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_593_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDumpJetInfo(void) {
   /* RPRootDumpJetInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo));
   G__memfunc_setup("RPRootDumpJetInfo",1675,G__LinkDef_594_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddJets",671,G__LinkDef_594_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<fastjet::PseudoJet,allocator<fastjet::PseudoJet> >' 'vector<fastjet::PseudoJet>' 11 - jets_vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_594_0_3, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDumpJetInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_594_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJetInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_594_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDumpJetInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_594_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDumpJetInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_594_0_7, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_594_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_594_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_594_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_594_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJetInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_594_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpJetInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_594_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDumpJetInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_594_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDumpJetInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDumpJetInfo", 1675, G__LinkDef_594_0_15, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo), -1, 0, 1, 1, 1, 0, "u 'RPRootDumpJetInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDumpJetInfo", 1801, G__LinkDef_594_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_594_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJetInfo), -1, 1, 1, 1, 1, 0, "u 'RPRootDumpJetInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR(void) {
   /* vector<RPRootDumpJet,allocator<RPRootDumpJet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR));
   G__memfunc_setup("at",213,G__LinkDef_596_0_1, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LinkDef_596_0_2, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LinkDef_596_0_3, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LinkDef_596_0_4, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LinkDef_596_0_5, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LinkDef_596_0_6, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LinkDef_596_0_7, 107, -1, G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LinkDef_596_0_8, 107, -1, G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_596_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_596_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - sz u 'RPRootDumpJet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LinkDef_596_0_11, 107, -1, G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LinkDef_596_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_596_0_13, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_596_0_14, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), G__defined_typename("vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpJet,allocator<RPRootDumpJet> >",4498,G__LinkDef_596_0_15, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpJet,allocator<RPRootDumpJet> >",4498,G__LinkDef_596_0_16, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n u 'RPRootDumpJet' - 11 'RPRootDumpJet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpJet,allocator<RPRootDumpJet> >",4498,G__LinkDef_596_0_17, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPRootDumpJet,allocator<RPRootDumpJet> >",4498,G__LinkDef_596_0_18, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator' 10 - first u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LinkDef_596_0_19, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LinkDef_596_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LinkDef_596_0_21, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LinkDef_596_0_22, 117, G__get_linked_tagnum(&G__LinkDefLN_RPRootDumpJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LinkDef_596_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RPRootDumpJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LinkDef_596_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_596_0_25, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - position u 'RPRootDumpJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_596_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - position u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator' 10 - first "
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_596_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - position k - 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::size_type' 0 - n "
"u 'RPRootDumpJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LinkDef_596_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_596_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_596_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - first u 'vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LinkDef_596_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RPRootDumpJet,allocator<RPRootDumpJet> >", 4624, G__LinkDef_596_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPRootDiffMassInfo(void) {
   /* RPRootDiffMassInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo));
   G__memfunc_setup("RPRootDiffMassInfo",1759,G__LinkDef_599_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVariables",1221,G__LinkDef_599_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CentralMassInfo' - 11 - centr_mass_info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_599_0_3, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPRootDiffMassInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_599_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDiffMassInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_599_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPRootDiffMassInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_599_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPRootDiffMassInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_599_0_7, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_599_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_599_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_599_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_599_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDiffMassInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_599_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDiffMassInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_599_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPRootDiffMassInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_599_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPRootDiffMassInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPRootDiffMassInfo", 1759, G__LinkDef_599_0_15, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo), -1, 0, 1, 1, 1, 0, "u 'RPRootDiffMassInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPRootDiffMassInfo", 1885, G__LinkDef_599_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_599_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_RPRootDiffMassInfo), -1, 1, 1, 1, 1, 0, "u 'RPRootDiffMassInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncT1Event(void) {
   /* T1Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_T1Event));
   G__memfunc_setup("T1Event",647,G__LinkDef_600_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_T1Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_600_0_2, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&T1Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_600_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_600_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&T1Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_600_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&T1Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_600_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_600_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_600_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T1Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_600_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T1Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_600_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T1Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("T1Event", 647, G__LinkDef_600_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_T1Event), -1, 0, 1, 1, 1, 0, "u 'T1Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~T1Event", 773, G__LinkDef_600_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_600_0_16, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_T1Event), -1, 1, 1, 1, 1, 0, "u 'T1Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncT2Event(void) {
   /* T2Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_T2Event));
   G__memfunc_setup("T2Event",648,G__LinkDef_601_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_T2Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_601_0_2, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&T2Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_601_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_601_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&T2Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_601_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&T2Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_601_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_601_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_601_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_601_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_601_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("T2Event", 648, G__LinkDef_601_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_T2Event), -1, 0, 1, 1, 1, 0, "u 'T2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~T2Event", 774, G__LinkDef_601_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_601_0_16, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_T2Event), -1, 1, 1, 1, 1, 0, "u 'T2Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPoint(void) {
   /* Point */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_Point));
   G__memfunc_setup("Point",522,G__LinkDef_602_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Point",522,G__LinkDef_602_0_2, 105, G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_602_0_3, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Point::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_602_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Point::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_602_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Point::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_602_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Point::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_602_0_7, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_602_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_602_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_602_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_602_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Point::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_602_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Point::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_602_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Point::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_602_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Point::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Point", 522, G__LinkDef_602_0_15, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 0, 1, 1, 1, 0, "u 'Point' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Point", 648, G__LinkDef_602_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_602_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 1, 1, 1, 1, 0, "u 'Point' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRPTimingDetectorsNtuplizerHit(void) {
   /* RPTimingDetectorsNtuplizerHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit));
   G__memfunc_setup("RPTimingDetectorsNtuplizerHit",2985,G__LinkDef_603_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RPTimingDetectorsNtuplizerHit",2985,G__LinkDef_603_0_2, 105, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 0, 2, 1, 1, 0, 
"r - - 0 - electrode_id u 'Point' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_603_0_3, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RPTimingDetectorsNtuplizerHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_603_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPTimingDetectorsNtuplizerHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_603_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RPTimingDetectorsNtuplizerHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_603_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RPTimingDetectorsNtuplizerHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__LinkDef_603_0_7, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__LinkDef_603_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__LinkDef_603_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_603_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_603_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPTimingDetectorsNtuplizerHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_603_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPTimingDetectorsNtuplizerHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_603_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RPTimingDetectorsNtuplizerHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_603_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RPTimingDetectorsNtuplizerHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RPTimingDetectorsNtuplizerHit", 2985, G__LinkDef_603_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 0, 1, 1, 1, 0, "u 'RPTimingDetectorsNtuplizerHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RPTimingDetectorsNtuplizerHit", 3111, G__LinkDef_603_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_603_0_17, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 1, 1, 1, 1, 0, "u 'RPTimingDetectorsNtuplizerHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR(void) {
   /* vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR));
   G__memfunc_setup("at",213,G__LinkDef_605_0_1, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LinkDef_605_0_2, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LinkDef_605_0_3, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LinkDef_605_0_4, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LinkDef_605_0_5, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LinkDef_605_0_6, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LinkDef_605_0_7, 107, -1, G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LinkDef_605_0_8, 107, -1, G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_605_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_605_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - sz u 'RPTimingDetectorsNtuplizerHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LinkDef_605_0_11, 107, -1, G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LinkDef_605_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_605_0_13, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_605_0_14, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), G__defined_typename("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >",7910,G__LinkDef_605_0_15, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >",7910,G__LinkDef_605_0_16, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n u 'RPTimingDetectorsNtuplizerHit' - 11 'RPTimingDetectorsNtuplizerHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >",7910,G__LinkDef_605_0_17, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >",7910,G__LinkDef_605_0_18, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator' 10 - first u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LinkDef_605_0_19, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LinkDef_605_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LinkDef_605_0_21, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LinkDef_605_0_22, 117, G__get_linked_tagnum(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LinkDef_605_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RPTimingDetectorsNtuplizerHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LinkDef_605_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_605_0_25, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - position u 'RPTimingDetectorsNtuplizerHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_605_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - position u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator' 10 - first "
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_605_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - position k - 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::size_type' 0 - n "
"u 'RPTimingDetectorsNtuplizerHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LinkDef_605_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_605_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_605_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - first u 'vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LinkDef_605_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >", 8036, G__LinkDef_605_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEPointcOallocatorlEPointgRsPgR(void) {
   /* vector<Point,allocator<Point> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR));
   G__memfunc_setup("at",213,G__LinkDef_609_0_1, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), G__defined_typename("vector<Point,allocator<Point> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Point,allocator<Point> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LinkDef_609_0_2, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), G__defined_typename("vector<Point,allocator<Point> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Point,allocator<Point> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LinkDef_609_0_3, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LinkDef_609_0_4, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LinkDef_609_0_5, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR), G__defined_typename("vector<Point,allocator<Point> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LinkDef_609_0_6, 117, G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR), G__defined_typename("vector<Point,allocator<Point> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LinkDef_609_0_7, 107, -1, G__defined_typename("vector<Point,allocator<Point> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LinkDef_609_0_8, 107, -1, G__defined_typename("vector<Point,allocator<Point> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_609_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Point,allocator<Point> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LinkDef_609_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Point,allocator<Point> >::size_type' 0 - sz u 'Point' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LinkDef_609_0_11, 107, -1, G__defined_typename("vector<Point,allocator<Point> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LinkDef_609_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_609_0_13, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), G__defined_typename("vector<Point,allocator<Point> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Point,allocator<Point> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LinkDef_609_0_14, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), G__defined_typename("vector<Point,allocator<Point> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Point,allocator<Point> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Point,allocator<Point> >",2984,G__LinkDef_609_0_15, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Point,allocator<Point> >",2984,G__LinkDef_609_0_16, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Point,allocator<Point> >::size_type' 0 - n u 'Point' - 11 'Point()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Point,allocator<Point> >",2984,G__LinkDef_609_0_17, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Point,allocator<Point> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Point,allocator<Point> >",2984,G__LinkDef_609_0_18, 105, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Point,allocator<Point> >::iterator' 'vector<Point,allocator<Point> >::const_iterator' 10 - first u 'vector<Point,allocator<Point> >::iterator' 'vector<Point,allocator<Point> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LinkDef_609_0_19, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Point,allocator<Point> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LinkDef_609_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Point,allocator<Point> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LinkDef_609_0_21, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LinkDef_609_0_22, 117, G__get_linked_tagnum(&G__LinkDefLN_Point), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LinkDef_609_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Point' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LinkDef_609_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Point,allocator<Point> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_609_0_25, 117, G__get_linked_tagnum(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Point,allocator<Point> >::iterator' - 0 - position u 'Point' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_609_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Point,allocator<Point> >::iterator' - 0 - position u 'vector<Point,allocator<Point> >::iterator' 'vector<Point,allocator<Point> >::const_iterator' 10 - first "
"u 'vector<Point,allocator<Point> >::iterator' 'vector<Point,allocator<Point> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LinkDef_609_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Point,allocator<Point> >::iterator' - 0 - position k - 'vector<Point,allocator<Point> >::size_type' 0 - n "
"u 'Point' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LinkDef_609_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_609_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Point,allocator<Point> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LinkDef_609_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Point,allocator<Point> >::iterator' - 0 - first u 'vector<Point,allocator<Point> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LinkDef_609_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Point,allocator<Point> >", 3110, G__LinkDef_609_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLinkDef() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLinkDef() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLinkDef() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LinkDefLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_EventMetaData = { "EventMetaData" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_TriggerData = { "TriggerData" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_fastjet = { "fastjet" , 110 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR = { "vector<fastjet::EtaPhi,allocator<fastjet::EtaPhi> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgRcLcLiteratorgR = { "reverse_iterator<vector<fastjet::EtaPhi,allocator<fastjet::EtaPhi> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_fastjetcLcLPseudoJet = { "fastjet::PseudoJet" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR = { "vector<fastjet::PseudoJet,allocator<fastjet::PseudoJet> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<fastjet::PseudoJet,allocator<fastjet::PseudoJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_pairlEstringcOunsignedsPintgR = { "pair<string,unsigned int>" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_listlEpairlEstringcOunsignedsPintgRcOallocatorlEpairlEstringcOunsignedsPintgRsPgRsPgR = { "list<pair<string,unsigned int>,allocator<pair<string,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR = { "vector<const fastjet::PseudoJet*,allocator<const fastjet::PseudoJet*> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const fastjet::PseudoJet*,allocator<const fastjet::PseudoJet*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR = { "vector<fastjet::ClusterSequence::history_element,allocator<fastjet::ClusterSequence::history_element> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<fastjet::ClusterSequence::history_element,allocator<fastjet::ClusterSequence::history_element> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR = { "set<const fastjet::ClusterSequence::history_element*,less<const fastjet::ClusterSequence::history_element*>,allocator<const fastjet::ClusterSequence::history_element*> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR = { "multimap<double,pair<int,int>,less<double>,allocator<pair<const double,pair<int,int> > > >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR = { "vector<fastjet::ClusterSequence::Tile,allocator<fastjet::ClusterSequence::Tile> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<fastjet::ClusterSequence::Tile,allocator<fastjet::ClusterSequence::Tile> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_CentralMassInfo = { "CentralMassInfo" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_RPRootDumpJet = { "RPRootDumpJet" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_RPRootDumpJetInfo = { "RPRootDumpJetInfo" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR = { "vector<RPRootDumpJet,allocator<RPRootDumpJet> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator = { "vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RPRootDumpJet,allocator<RPRootDumpJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_RPRootDiffMassInfo = { "RPRootDiffMassInfo" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_T1Event = { "T1Event" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_T2Event = { "T2Event" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_Point = { "Point" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_RPTimingDetectorsNtuplizerHit = { "RPTimingDetectorsNtuplizerHit" , 115 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR = { "vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator = { "vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR = { "vector<Point,allocator<Point> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator = { "vector<Point,allocator<Point> >::iterator" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Point,allocator<Point> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLinkDef() {
  G__LinkDefLN_TClass.tagnum = -1 ;
  G__LinkDefLN_TBuffer.tagnum = -1 ;
  G__LinkDefLN_TMemberInspector.tagnum = -1 ;
  G__LinkDefLN_TObject.tagnum = -1 ;
  G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_EventMetaData.tagnum = -1 ;
  G__LinkDefLN_TriggerData.tagnum = -1 ;
  G__LinkDefLN_fastjet.tagnum = -1 ;
  G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_fastjetcLcLPseudoJet.tagnum = -1 ;
  G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_pairlEstringcOunsignedsPintgR.tagnum = -1 ;
  G__LinkDefLN_listlEpairlEstringcOunsignedsPintgRcOallocatorlEpairlEstringcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR.tagnum = -1 ;
  G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_CentralMassInfo.tagnum = -1 ;
  G__LinkDefLN_RPRootDumpJet.tagnum = -1 ;
  G__LinkDefLN_RPRootDumpJetInfo.tagnum = -1 ;
  G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_RPRootDiffMassInfo.tagnum = -1 ;
  G__LinkDefLN_T1Event.tagnum = -1 ;
  G__LinkDefLN_T2Event.tagnum = -1 ;
  G__LinkDefLN_Point.tagnum = -1 ;
  G__LinkDefLN_RPTimingDetectorsNtuplizerHit.tagnum = -1 ;
  G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLinkDef() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TClass);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TObject);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_EventMetaData),sizeof(EventMetaData),-1,263424,(char*)NULL,G__setup_memvarEventMetaData,G__setup_memfuncEventMetaData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_TriggerData),sizeof(TriggerData),-1,263424,(char*)NULL,G__setup_memvarTriggerData,G__setup_memfuncTriggerData);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_fastjet);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLEtaPhicOallocatorlEfastjetcLcLEtaPhigRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_fastjetcLcLPseudoJet);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLPseudoJetcOallocatorlEfastjetcLcLPseudoJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_pairlEstringcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_listlEpairlEstringcOunsignedsPintgRcOallocatorlEpairlEstringcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEconstsPfastjetcLcLPseudoJetmUcOallocatorlEconstsPfastjetcLcLPseudoJetmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLhistory_elementcOallocatorlEfastjetcLcLClusterSequencecLcLhistory_elementgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_setlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUcOlesslEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRcOallocatorlEconstsPfastjetcLcLClusterSequencecLcLhistory_elementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_multimaplEdoublecOpairlEintcOintgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOpairlEintcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEfastjetcLcLClusterSequencecLcLTilecOallocatorlEfastjetcLcLClusterSequencecLcLTilegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_CentralMassInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_RPRootDumpJet),sizeof(RPRootDumpJet),-1,34048,(char*)NULL,G__setup_memvarRPRootDumpJet,G__setup_memfuncRPRootDumpJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_RPRootDumpJetInfo),sizeof(RPRootDumpJetInfo),-1,1280,(char*)NULL,G__setup_memvarRPRootDumpJetInfo,G__setup_memfuncRPRootDumpJetInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR),sizeof(vector<RPRootDumpJet,allocator<RPRootDumpJet> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR,G__setup_memfuncvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlERPRootDumpJetcOallocatorlERPRootDumpJetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_RPRootDiffMassInfo),sizeof(RPRootDiffMassInfo),-1,1280,(char*)NULL,G__setup_memvarRPRootDiffMassInfo,G__setup_memfuncRPRootDiffMassInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_T1Event),sizeof(T1Event),-1,292096,(char*)NULL,G__setup_memvarT1Event,G__setup_memfuncT1Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_T2Event),sizeof(T2Event),-1,292096,(char*)NULL,G__setup_memvarT2Event,G__setup_memfuncT2Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_Point),sizeof(Point),-1,296192,(char*)NULL,G__setup_memvarPoint,G__setup_memfuncPoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_RPTimingDetectorsNtuplizerHit),sizeof(RPTimingDetectorsNtuplizerHit),-1,296192,(char*)NULL,G__setup_memvarRPTimingDetectorsNtuplizerHit,G__setup_memfuncRPTimingDetectorsNtuplizerHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR),sizeof(vector<RPTimingDetectorsNtuplizerHit,allocator<RPTimingDetectorsNtuplizerHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR,G__setup_memfuncvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlERPTimingDetectorsNtuplizerHitcOallocatorlERPTimingDetectorsNtuplizerHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgR),sizeof(vector<Point,allocator<Point> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEPointcOallocatorlEPointgRsPgR,G__setup_memfuncvectorlEPointcOallocatorlEPointgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEPointcOallocatorlEPointgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEPointcOallocatorlEPointgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLinkDef(void) {
  G__check_setup_version(30051515,"G__cpp_setupLinkDef()");
  G__set_cpp_environmentLinkDef();
  G__cpp_setup_tagtableLinkDef();

  G__cpp_setup_inheritanceLinkDef();

  G__cpp_setup_typetableLinkDef();

  G__cpp_setup_memvarLinkDef();

  G__cpp_setup_memfuncLinkDef();
  G__cpp_setup_globalLinkDef();
  G__cpp_setup_funcLinkDef();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLinkDef();
  return;
}
class G__cpp_setup_initLinkDef {
  public:
    G__cpp_setup_initLinkDef() { G__add_setup_func("LinkDef",(G__incsetup)(&G__cpp_setupLinkDef)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLinkDef() { G__remove_setup_func("LinkDef"); }
};
G__cpp_setup_initLinkDef G__cpp_setup_initializerLinkDef;

