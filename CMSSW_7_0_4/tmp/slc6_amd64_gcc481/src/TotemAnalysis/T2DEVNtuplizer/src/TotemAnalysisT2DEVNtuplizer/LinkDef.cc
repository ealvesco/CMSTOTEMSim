#include "TotemAnalysis/T2DEVNtuplizer/interface/T2EventDEV.h"

#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ class T2EventDEV+;

#endif
//
// File generated by /afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/bin/rootcint at Mon Jul 11 23:21:08 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME tmpdIslc6_amd64_gcc481dIsrcdITotemAnalysisdIT2DEVNtuplizerdIsrcdITotemAnalysisT2DEVNtuplizerdILinkDef
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LinkDef.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void T2EventDEV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_T2EventDEV(void *p = 0);
   static void *newArray_T2EventDEV(Long_t size, void *p);
   static void delete_T2EventDEV(void *p);
   static void deleteArray_T2EventDEV(void *p);
   static void destruct_T2EventDEV(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::T2EventDEV*)
   {
      ::T2EventDEV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::T2EventDEV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("T2EventDEV", ::T2EventDEV::Class_Version(), "/afs/cern.ch/user/e/eliza/private/TOTEM_JPSI/RPSIM/CMSSW_7_0_4/src/TotemAnalysis/T2DEVNtuplizer/interface/T2EventDEV.h", 6,
                  typeid(::T2EventDEV), DefineBehavior(ptr, ptr),
                  &::T2EventDEV::Dictionary, isa_proxy, 4,
                  sizeof(::T2EventDEV) );
      instance.SetNew(&new_T2EventDEV);
      instance.SetNewArray(&newArray_T2EventDEV);
      instance.SetDelete(&delete_T2EventDEV);
      instance.SetDeleteArray(&deleteArray_T2EventDEV);
      instance.SetDestructor(&destruct_T2EventDEV);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::T2EventDEV*)
   {
      return GenerateInitInstanceLocal((::T2EventDEV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::T2EventDEV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *T2EventDEV::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *T2EventDEV::Class_Name()
{
   return "T2EventDEV";
}

//______________________________________________________________________________
const char *T2EventDEV::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2EventDEV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int T2EventDEV::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::T2EventDEV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void T2EventDEV::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2EventDEV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *T2EventDEV::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::T2EventDEV*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void T2EventDEV::Streamer(TBuffer &R__b)
{
   // Stream an object of class T2EventDEV.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(T2EventDEV::Class(),this);
   } else {
      R__b.WriteClassBuffer(T2EventDEV::Class(),this);
   }
}

//______________________________________________________________________________
void T2EventDEV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class T2EventDEV.
      TClass *R__cl = ::T2EventDEV::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkSecondaryRecoIndex", (void*)&TrkSecondaryRecoIndex);
      R__insp.InspectMember("vector<int>", (void*)&TrkSecondaryRecoIndex, "TrkSecondaryRecoIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkSecondaryPDG", (void*)&TrkSecondaryPDG);
      R__insp.InspectMember("vector<int>", (void*)&TrkSecondaryPDG, "TrkSecondaryPDG.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkSecondaryMotherPDG", (void*)&TrkSecondaryMotherPDG);
      R__insp.InspectMember("vector<int>", (void*)&TrkSecondaryMotherPDG, "TrkSecondaryMotherPDG.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_row", (void*)&Pad_row);
      R__insp.InspectMember("vector<int>", (void*)&Pad_row, "Pad_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_col", (void*)&Pad_col);
      R__insp.InspectMember("vector<int>", (void*)&Pad_col, "Pad_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_det", (void*)&Pad_det);
      R__insp.InspectMember("vector<int>", (void*)&Pad_det, "Pad_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_row", (void*)&Strip_row);
      R__insp.InspectMember("vector<int>", (void*)&Strip_row, "Strip_row.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_col", (void*)&Strip_col);
      R__insp.InspectMember("vector<int>", (void*)&Strip_col, "Strip_col.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_det", (void*)&Strip_det);
      R__insp.InspectMember("vector<int>", (void*)&Strip_det, "Strip_det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_XY", (void*)&TrkEta_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_XY, "TrkEta_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta2", (void*)&TrkEta2);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta2, "TrkEta2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZmin_XY", (void*)&TrkZmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkZmin_XY, "TrkZmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkRmin_XY", (void*)&TrkRmin_XY);
      R__insp.InspectMember("vector<double>", (void*)&TrkRmin_XY, "TrkRmin_XY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAx", (void*)&TrkAx);
      R__insp.InspectMember("vector<double>", (void*)&TrkAx, "TrkAx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkAy", (void*)&TrkAy);
      R__insp.InspectMember("vector<double>", (void*)&TrkAy, "TrkAy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkX0", (void*)&TrkX0);
      R__insp.InspectMember("vector<double>", (void*)&TrkX0, "TrkX0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkY0", (void*)&TrkY0);
      R__insp.InspectMember("vector<double>", (void*)&TrkY0, "TrkY0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi", (void*)&TrkPhi);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi, "TrkPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2XProb", (void*)&TrkChi2XProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2XProb, "TrkChi2XProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2YProb", (void*)&TrkChi2YProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChi2YProb, "TrkChi2YProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkClass1HitCounter", (void*)&TrkClass1HitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkClass1HitCounter, "TrkClass1HitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkHitCounter", (void*)&TrkHitCounter);
      R__insp.InspectMember("vector<double>", (void*)&TrkHitCounter, "TrkHitCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkThetaR_RZFit", (void*)&TrkThetaR_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkThetaR_RZFit, "TrkThetaR_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEta_RZFit", (void*)&TrkEta_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkEta_RZFit, "TrkEta_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPhi_RZFit", (void*)&TrkPhi_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkPhi_RZFit, "TrkPhi_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkZ0_RZFit", (void*)&TrkZ0_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkZ0_RZFit, "TrkZ0_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBX_RZFit", (void*)&TrkBX_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBX_RZFit, "TrkBX_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkBY_RZFit", (void*)&TrkBY_RZFit);
      R__insp.InspectMember("vector<double>", (void*)&TrkBY_RZFit, "TrkBY_RZFit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH0", (void*)&TrkNumHitInH0);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH0, "TrkNumHitInH0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH1", (void*)&TrkNumHitInH1);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH1, "TrkNumHitInH1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH2", (void*)&TrkNumHitInH2);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH2, "TrkNumHitInH2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNumHitInH3", (void*)&TrkNumHitInH3);
      R__insp.InspectMember("vector<int>", (void*)&TrkNumHitInH3, "TrkNumHitInH3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNature", (void*)&TrkNature);
      R__insp.InspectMember("vector<unsigned int>", (void*)&TrkNature, "TrkNature.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trk_NumHitPrimary", (void*)&Trk_NumHitPrimary);
      R__insp.InspectMember("vector<int>", (void*)&Trk_NumHitPrimary, "Trk_NumHitPrimary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimGeantTrkPT", (void*)&PrimGeantTrkPT);
      R__insp.InspectMember("vector<double>", (void*)&PrimGeantTrkPT, "PrimGeantTrkPT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryGeantTrkEta", (void*)&PrimaryGeantTrkEta);
      R__insp.InspectMember("vector<double>", (void*)&PrimaryGeantTrkEta, "PrimaryGeantTrkEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryGeantTrkQuarter", (void*)&PrimaryGeantTrkQuarter);
      R__insp.InspectMember("vector<double>", (void*)&PrimaryGeantTrkQuarter, "PrimaryGeantTrkQuarter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryGeantTrkBarcode", (void*)&PrimaryGeantTrkBarcode);
      R__insp.InspectMember("vector<int>", (void*)&PrimaryGeantTrkBarcode, "PrimaryGeantTrkBarcode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryGeneratorEta", (void*)&TrkPrimaryGeneratorEta);
      R__insp.InspectMember("vector<double>", (void*)&TrkPrimaryGeneratorEta, "TrkPrimaryGeneratorEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryGeantEta", (void*)&TrkPrimaryGeantEta);
      R__insp.InspectMember("vector<double>", (void*)&TrkPrimaryGeantEta, "TrkPrimaryGeantEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryEnergy", (void*)&TrkPrimaryEnergy);
      R__insp.InspectMember("vector<double>", (void*)&TrkPrimaryEnergy, "TrkPrimaryEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryPt", (void*)&TrkPrimaryPt);
      R__insp.InspectMember("vector<double>", (void*)&TrkPrimaryPt, "TrkPrimaryPt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPrimaryBarcode", (void*)&TrkPrimaryBarcode);
      R__insp.InspectMember("vector<int>", (void*)&TrkPrimaryBarcode, "TrkPrimaryBarcode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChiProb", (void*)&TrkChiProb);
      R__insp.InspectMember("vector<double>", (void*)&TrkChiProb, "TrkChiProb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumpadonly", (void*)&Trknumpadonly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumpadonly, "Trknumpadonly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumstriponly", (void*)&Trknumstriponly);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumstriponly, "Trknumstriponly.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitall", (void*)&Trknumhitall);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitall, "Trknumhitall.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trknumhitacl1", (void*)&Trknumhitacl1);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trknumhitacl1, "Trknumhitacl1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPhi", (void*)&HitPhi);
      R__insp.InspectMember("vector<double>", (void*)&HitPhi, "HitPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitR", (void*)&HitR);
      R__insp.InspectMember("vector<double>", (void*)&HitR, "HitR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitType", (void*)&HitType);
      R__insp.InspectMember("vector<double>", (void*)&HitType, "HitType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumPad", (void*)&HitNumPad);
      R__insp.InspectMember("vector<double>", (void*)&HitNumPad, "HitNumPad.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitNumStrip", (void*)&HitNumStrip);
      R__insp.InspectMember("vector<double>", (void*)&HitNumStrip, "HitNumStrip.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryX", (void*)&TrkEntryX);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryX, "TrkEntryX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryY", (void*)&TrkEntryY);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryY, "TrkEntryY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkEntryZ", (void*)&TrkEntryZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkEntryZ, "TrkEntryZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitX", (void*)&TrkExitX);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitX, "TrkExitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitY", (void*)&TrkExitY);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitY, "TrkExitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkExitZ", (void*)&TrkExitZ);
      R__insp.InspectMember("vector<double>", (void*)&TrkExitZ, "TrkExitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorStableCHPartileEta", (void*)&GeneratorStableCHPartileEta);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorStableCHPartileEta, "GeneratorStableCHPartileEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorStableCHPartilePhi", (void*)&GeneratorStableCHPartilePhi);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorStableCHPartilePhi, "GeneratorStableCHPartilePhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaVtxSize", (void*)&GammaVtxSize);
      R__insp.InspectMember("vector<int>", (void*)&GammaVtxSize, "GammaVtxSize.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaVtxSizeTrkIndex", (void*)&GammaVtxSizeTrkIndex);
      R__insp.InspectMember("vector<int>", (void*)&GammaVtxSizeTrkIndex, "GammaVtxSizeTrkIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaVtxSizeZImp", (void*)&GammaVtxSizeZImp);
      R__insp.InspectMember("vector<double>", (void*)&GammaVtxSizeZImp, "GammaVtxSizeZImp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileEta", (void*)&GeneratorAllPartileEta);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorAllPartileEta, "GeneratorAllPartileEta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartilePhi", (void*)&GeneratorAllPartilePhi);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorAllPartilePhi, "GeneratorAllPartilePhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartilePDG", (void*)&GeneratorAllPartilePDG);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartilePDG, "GeneratorAllPartilePDG.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileSTATUS", (void*)&GeneratorAllPartileSTATUS);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileSTATUS, "GeneratorAllPartileSTATUS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileBarcode", (void*)&GeneratorAllPartileBarcode);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileBarcode, "GeneratorAllPartileBarcode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileE", (void*)&GeneratorAllPartileE);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorAllPartileE, "GeneratorAllPartileE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartilePt", (void*)&GeneratorAllPartilePt);
      R__insp.InspectMember("vector<double>", (void*)&GeneratorAllPartilePt, "GeneratorAllPartilePt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileCharge1", (void*)&GeneratorAllPartileCharge1);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileCharge1, "GeneratorAllPartileCharge1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileCharge2", (void*)&GeneratorAllPartileCharge2);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileCharge2, "GeneratorAllPartileCharge2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileCHARGE", (void*)&GeneratorAllPartileCHARGE);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileCHARGE, "GeneratorAllPartileCHARGE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileAncestorPID", (void*)&GeneratorAllPartileAncestorPID);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileAncestorPID, "GeneratorAllPartileAncestorPID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneratorAllPartileAncestorSize", (void*)&GeneratorAllPartileAncestorSize);
      R__insp.InspectMember("vector<int>", (void*)&GeneratorAllPartileAncestorSize, "GeneratorAllPartileAncestorSize.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH0", &NumPadCluH0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH1", &NumPadCluH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH2", &NumPadCluH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPadCluH3", &NumPadCluH3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_no", &run_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_no", &ev_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pad_noise", (void*)&Pad_noise);
      R__insp.InspectMember("vector<double>", (void*)&Pad_noise, "Pad_noise.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var1", &its_var1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "its_var2", &its_var2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_T2EventDEV(void *p) {
      return  p ? new(p) ::T2EventDEV : new ::T2EventDEV;
   }
   static void *newArray_T2EventDEV(Long_t nElements, void *p) {
      return p ? new(p) ::T2EventDEV[nElements] : new ::T2EventDEV[nElements];
   }
   // Wrapper around operator delete
   static void delete_T2EventDEV(void *p) {
      delete ((::T2EventDEV*)p);
   }
   static void deleteArray_T2EventDEV(void *p) {
      delete [] ((::T2EventDEV*)p);
   }
   static void destruct_T2EventDEV(void *p) {
      typedef ::T2EventDEV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::T2EventDEV

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/afs/cern.ch/cms/slc6_amd64_gcc481/lcg/root/5.34.10-cms/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* tmp/slc6_amd64_gcc481/src/TotemAnalysis/T2DEVNtuplizer/src/TotemAnalysisT2DEVNtuplizer/LinkDef.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLinkDef();

extern "C" void G__set_cpp_environmentLinkDef() {
  G__cpp_reset_tagtableLinkDef();
}
#include <new>
extern "C" int G__cpp_dllrevLinkDef() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* T2EventDEV */
static int G__LinkDef_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2EventDEV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2EventDEV[n];
     } else {
       p = new((void*) gvp) T2EventDEV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new T2EventDEV;
     } else {
       p = new((void*) gvp) T2EventDEV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) T2EventDEV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2EventDEV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) T2EventDEV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      T2EventDEV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((T2EventDEV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2EventDEV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2EventDEV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) T2EventDEV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinkDef_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) T2EventDEV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinkDef_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   T2EventDEV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new T2EventDEV(*(T2EventDEV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef T2EventDEV G__TT2EventDEV;
static int G__LinkDef_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (T2EventDEV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((T2EventDEV*) (soff+(sizeof(T2EventDEV)*i)))->~G__TT2EventDEV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (T2EventDEV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((T2EventDEV*) (soff))->~G__TT2EventDEV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LinkDef_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   T2EventDEV* dest = (T2EventDEV*) G__getstructoffset();
   *dest = *(T2EventDEV*) libp->para[0].ref;
   const T2EventDEV& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* T2EventDEV */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLinkDef {
 public:
  G__Sizep2memfuncLinkDef(): p(&G__Sizep2memfuncLinkDef::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLinkDef::*p)();
};

size_t G__get_sizep2memfuncLinkDef()
{
  G__Sizep2memfuncLinkDef a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLinkDef() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV))) {
     T2EventDEV *G__Lderived;
     G__Lderived=(T2EventDEV*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV),G__get_linked_tagnum(&G__LinkDefLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLinkDef() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* T2EventDEV */
static void G__setup_memvarT2EventDEV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV));
   { T2EventDEV *p; p=(T2EventDEV*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TrkSecondaryRecoIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkSecondaryRecoIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkSecondaryPDG)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkSecondaryPDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkSecondaryMotherPDG)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkSecondaryMotherPDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pad_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_row=",0,"strip row   ");
   G__memvar_setup((void*)((long)(&p->Pad_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_col=",0,"strip column   ");
   G__memvar_setup((void*)((long)(&p->Pad_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pad_det=",0,"symbolic id of the detector containind the pad");
   G__memvar_setup((void*)((long)(&p->Strip_row)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_row=",0,"strip row");
   G__memvar_setup((void*)((long)(&p->Strip_col)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_col=",0,"strip column");
   G__memvar_setup((void*)((long)(&p->Strip_det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_det=",0,"symbolic id of the detector containind the strip");
   G__memvar_setup((void*)((long)(&p->TrkEta_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkEta2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkZmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkRmin_XY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkRmin_XY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkAx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAx=",0,"slope of the track projection in the XZ plane");
   G__memvar_setup((void*)((long)(&p->TrkAy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkAy=",0,"slope of the track projection in the YZ plane");
   G__memvar_setup((void*)((long)(&p->TrkX0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkX0=",0,"X at Z=0 for the XZ projected track  ");
   G__memvar_setup((void*)((long)(&p->TrkY0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkY0=",0,"Y at Z=0 for the XZ projected track");
   G__memvar_setup((void*)((long)(&p->TrkPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi=",0,"Trk Phi (XY fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2XProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2XProb=",0,"Chi2-X probability (goodness of the XZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkChi2YProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChi2YProb=",0,"Chi2-Y probability (goodness of the YZ projection fit)");
   G__memvar_setup((void*)((long)(&p->TrkClass1HitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkClass1HitCounter=",0,"Number of class1 Hit in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkHitCounter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkHitCounter=",0,"Number of class1 + cluster Pad hits in the Trk");
   G__memvar_setup((void*)((long)(&p->TrkThetaR_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkThetaR_RZFit=",0,"Trk Polar angle obtained tracking in the Rz plane");
   G__memvar_setup((void*)((long)(&p->TrkEta_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEta_RZFit=",0,"Trk Eta obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkPhi_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPhi_RZFit=",0,"Trk Phi obtained with a constant fit.");
   G__memvar_setup((void*)((long)(&p->TrkZ0_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkZ0_RZFit=",0,"Crossing Point between Trk and Z Axis obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBX_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBX_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkBY_RZFit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkBY_RZFit=",0,"X0 @ Z=0 obtained tracking in the Rz plane ");
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNumHitInH3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkNumHitInH3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkNature)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"TrkNature=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trk_NumHitPrimary)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Trk_NumHitPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimGeantTrkPT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PrimGeantTrkPT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryGeantTrkEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PrimaryGeantTrkEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryGeantTrkQuarter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PrimaryGeantTrkQuarter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryGeantTrkBarcode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"PrimaryGeantTrkBarcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPrimaryGeneratorEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPrimaryGeneratorEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPrimaryGeantEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPrimaryGeantEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPrimaryEnergy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPrimaryEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPrimaryPt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkPrimaryPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkPrimaryBarcode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TrkPrimaryBarcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrkChiProb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkChiProb=",0,"Make sense only with T2TrackProducer3");
   G__memvar_setup((void*)((long)(&p->Trknumpadonly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumpadonly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumstriponly)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumstriponly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitall)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trknumhitacl1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trknumhitacl1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitPhi=",0,"Phi position of all the Hits (deg)");
   G__memvar_setup((void*)((long)(&p->HitR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitR=",0,"R position of all the Hits (mm)");
   G__memvar_setup((void*)((long)(&p->HitType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitType=",0,"0-> only pad; 1-> only strip 2->Class 1 Hit (superimposition Pad/Strip)");
   G__memvar_setup((void*)((long)(&p->HitNumPad)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumPad=",0,"Cluster Pad Size ");
   G__memvar_setup((void*)((long)(&p->HitNumStrip)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"HitNumStrip=",0,"Cluster Strip Size");
   G__memvar_setup((void*)((long)(&p->TrkEntryX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryX=",0,"Trk Entry point X");
   G__memvar_setup((void*)((long)(&p->TrkEntryY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryY=",0,"Trk Entry point Y ");
   G__memvar_setup((void*)((long)(&p->TrkEntryZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkEntryZ=",0,"Trk Entry point Z");
   G__memvar_setup((void*)((long)(&p->TrkExitX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitX=",0,"Trk Exit point X");
   G__memvar_setup((void*)((long)(&p->TrkExitY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitY=",0,"Trk Exit point Y  ");
   G__memvar_setup((void*)((long)(&p->TrkExitZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"TrkExitZ=",0,"Trk Exit point Z");
   G__memvar_setup((void*)((long)(&p->GeneratorStableCHPartileEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorStableCHPartileEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorStableCHPartilePhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorStableCHPartilePhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GammaVtxSize)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GammaVtxSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GammaVtxSizeTrkIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GammaVtxSizeTrkIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GammaVtxSizeZImp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GammaVtxSizeZImp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileEta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorAllPartileEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartilePhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorAllPartilePhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartilePDG)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartilePDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileSTATUS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileSTATUS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileBarcode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileBarcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorAllPartileE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartilePt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"GeneratorAllPartilePt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileCharge1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileCharge1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileCharge2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileCharge2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileCHARGE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileCHARGE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileAncestorPID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileAncestorPID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorAllPartileAncestorSize)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"GeneratorAllPartileAncestorSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumPadCluH0)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH0=",0,"Num pad cluster in the whole H0");
   G__memvar_setup((void*)((long)(&p->NumPadCluH1)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumPadCluH2)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumPadCluH3)-(long)(p)),104,0,0,-1,-1,-1,1,"NumPadCluH3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_no)-(long)(p)),108,0,0,-1,-1,-1,1,"run_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_no)-(long)(p)),108,0,0,-1,-1,-1,1,"ev_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pad_noise)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Pad_noise=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"its_var1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"its_var2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LinkDefLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLinkDef() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncT2EventDEV(void) {
   /* T2EventDEV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV));
   G__memfunc_setup("T2EventDEV",871,G__LinkDef_168_0_1, 105, G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LinkDef_168_0_2, 85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&T2EventDEV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LinkDef_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2EventDEV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LinkDef_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&T2EventDEV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LinkDef_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&T2EventDEV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LinkDefLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinkDef_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LinkDef_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2EventDEV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LinkDef_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2EventDEV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LinkDef_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&T2EventDEV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LinkDef_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&T2EventDEV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("T2EventDEV", 871, G__LinkDef_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV), -1, 0, 1, 1, 1, 0, "u 'T2EventDEV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~T2EventDEV", 997, G__LinkDef_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LinkDef_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__LinkDefLN_T2EventDEV), -1, 1, 1, 1, 1, 0, "u 'T2EventDEV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLinkDef() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLinkDef() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLinkDef() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LinkDefLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_T2EventDEV = { "T2EventDEV" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLinkDef() {
  G__LinkDefLN_TClass.tagnum = -1 ;
  G__LinkDefLN_TBuffer.tagnum = -1 ;
  G__LinkDefLN_TMemberInspector.tagnum = -1 ;
  G__LinkDefLN_TObject.tagnum = -1 ;
  G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LinkDefLN_T2EventDEV.tagnum = -1 ;
  G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLinkDef() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TClass);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_TObject);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LinkDefLN_T2EventDEV),sizeof(T2EventDEV),-1,292096,(char*)NULL,G__setup_memvarT2EventDEV,G__setup_memfuncT2EventDEV);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LinkDefLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLinkDef(void) {
  G__check_setup_version(30051515,"G__cpp_setupLinkDef()");
  G__set_cpp_environmentLinkDef();
  G__cpp_setup_tagtableLinkDef();

  G__cpp_setup_inheritanceLinkDef();

  G__cpp_setup_typetableLinkDef();

  G__cpp_setup_memvarLinkDef();

  G__cpp_setup_memfuncLinkDef();
  G__cpp_setup_globalLinkDef();
  G__cpp_setup_funcLinkDef();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLinkDef();
  return;
}
class G__cpp_setup_initLinkDef {
  public:
    G__cpp_setup_initLinkDef() { G__add_setup_func("LinkDef",(G__incsetup)(&G__cpp_setupLinkDef)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLinkDef() { G__remove_setup_func("LinkDef"); }
};
G__cpp_setup_initLinkDef G__cpp_setup_initializerLinkDef;

